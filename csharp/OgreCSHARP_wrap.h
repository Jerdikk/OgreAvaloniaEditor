/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_Ogre_WRAP_H_
#define SWIG_Ogre_WRAP_H_

class SwigDirector_LogListener : public Ogre::LogListener, public Swig::Director {

public:
    SwigDirector_LogListener();
    virtual ~SwigDirector_LogListener();
    virtual void messageLogged(Ogre::String const &message, Ogre::LogMessageLevel lml, bool maskDebug, Ogre::String const &logName, bool &skipThisMessage);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(char *, int, unsigned int, char *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackmessageLogged);

private:
    SWIG_Callback0_t swig_callbackmessageLogged;
    void swig_init_callbacks();
};

class SwigDirector_FrameListener : public Ogre::FrameListener, public Swig::Director {

public:
    SwigDirector_FrameListener();
    virtual bool frameStarted(Ogre::FrameEvent const &evt);
    virtual bool frameRenderingQueued(Ogre::FrameEvent const &evt);
    virtual bool frameEnded(Ogre::FrameEvent const &evt);
    virtual ~SwigDirector_FrameListener();

    typedef unsigned int (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackframeStarted, SWIG_Callback1_t callbackframeRenderingQueued, SWIG_Callback2_t callbackframeEnded);

private:
    SWIG_Callback0_t swig_callbackframeStarted;
    SWIG_Callback1_t swig_callbackframeRenderingQueued;
    SWIG_Callback2_t swig_callbackframeEnded;
    void swig_init_callbacks();
};

class SwigDirector_LodListener : public Ogre::LodListener, public Swig::Director {

public:
    SwigDirector_LodListener();
    virtual ~SwigDirector_LodListener();
    virtual bool prequeueMovableObjectLodChanged(Ogre::MovableObjectLodChangedEvent const &evt);
    virtual void postqueueMovableObjectLodChanged(Ogre::MovableObjectLodChangedEvent const &evt);
    virtual bool prequeueEntityMeshLodChanged(Ogre::EntityMeshLodChangedEvent &evt);
    virtual void postqueueEntityMeshLodChanged(Ogre::EntityMeshLodChangedEvent const &evt);
    virtual bool prequeueEntityMaterialLodChanged(Ogre::EntityMaterialLodChangedEvent &evt);
    virtual void postqueueEntityMaterialLodChanged(Ogre::EntityMaterialLodChangedEvent const &evt);

    typedef unsigned int (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackprequeueMovableObjectLodChanged, SWIG_Callback1_t callbackpostqueueMovableObjectLodChanged, SWIG_Callback2_t callbackprequeueEntityMeshLodChanged, SWIG_Callback3_t callbackpostqueueEntityMeshLodChanged, SWIG_Callback4_t callbackprequeueEntityMaterialLodChanged, SWIG_Callback5_t callbackpostqueueEntityMaterialLodChanged);

private:
    SWIG_Callback0_t swig_callbackprequeueMovableObjectLodChanged;
    SWIG_Callback1_t swig_callbackpostqueueMovableObjectLodChanged;
    SWIG_Callback2_t swig_callbackprequeueEntityMeshLodChanged;
    SWIG_Callback3_t swig_callbackpostqueueEntityMeshLodChanged;
    SWIG_Callback4_t swig_callbackprequeueEntityMaterialLodChanged;
    SWIG_Callback5_t swig_callbackpostqueueEntityMaterialLodChanged;
    void swig_init_callbacks();
};

class SwigDirector_RenderObjectListener : public Ogre::RenderObjectListener, public Swig::Director {

public:
    SwigDirector_RenderObjectListener();
    virtual ~SwigDirector_RenderObjectListener();
    virtual void notifyRenderSingleObject(Ogre::Renderable *rend, Ogre::Pass const *pass, Ogre::AutoParamDataSource const *source, Ogre::LightList const *pLightList, bool suppressRenderStateChanges);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, void *, void *, void *, unsigned int);
    void swig_connect_director(SWIG_Callback0_t callbacknotifyRenderSingleObject);

private:
    SWIG_Callback0_t swig_callbacknotifyRenderSingleObject;
    void swig_init_callbacks();
};

class SwigDirector_RenderQueueListener : public Ogre::RenderQueueListener, public Swig::Director {

public:
    SwigDirector_RenderQueueListener();
    virtual ~SwigDirector_RenderQueueListener();
    virtual void preRenderQueues();
    virtual void postRenderQueues();
    virtual void renderQueueStarted(Ogre::uint8 queueGroupId, Ogre::String const &cameraName, bool &skipThisInvocation);
    virtual void renderQueueEnded(Ogre::uint8 queueGroupId, Ogre::String const &cameraName, bool &repeatThisInvocation);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(unsigned char, char *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(unsigned char, char *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackpreRenderQueues, SWIG_Callback1_t callbackpostRenderQueues, SWIG_Callback2_t callbackrenderQueueStarted, SWIG_Callback3_t callbackrenderQueueEnded);

private:
    SWIG_Callback0_t swig_callbackpreRenderQueues;
    SWIG_Callback1_t swig_callbackpostRenderQueues;
    SWIG_Callback2_t swig_callbackrenderQueueStarted;
    SWIG_Callback3_t swig_callbackrenderQueueEnded;
    void swig_init_callbacks();
};

class SwigDirector_RenderTargetListener : public Ogre::RenderTargetListener, public Swig::Director {

public:
    SwigDirector_RenderTargetListener();
    virtual ~SwigDirector_RenderTargetListener();
    virtual void preRenderTargetUpdate(Ogre::RenderTargetEvent const &evt);
    virtual void postRenderTargetUpdate(Ogre::RenderTargetEvent const &evt);
    virtual void preViewportUpdate(Ogre::RenderTargetViewportEvent const &evt);
    virtual void postViewportUpdate(Ogre::RenderTargetViewportEvent const &evt);
    virtual void viewportAdded(Ogre::RenderTargetViewportEvent const &evt);
    virtual void viewportRemoved(Ogre::RenderTargetViewportEvent const &evt);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackpreRenderTargetUpdate, SWIG_Callback1_t callbackpostRenderTargetUpdate, SWIG_Callback2_t callbackpreViewportUpdate, SWIG_Callback3_t callbackpostViewportUpdate, SWIG_Callback4_t callbackviewportAdded, SWIG_Callback5_t callbackviewportRemoved);

private:
    SWIG_Callback0_t swig_callbackpreRenderTargetUpdate;
    SWIG_Callback1_t swig_callbackpostRenderTargetUpdate;
    SWIG_Callback2_t swig_callbackpreViewportUpdate;
    SWIG_Callback3_t swig_callbackpostViewportUpdate;
    SWIG_Callback4_t swig_callbackviewportAdded;
    SWIG_Callback5_t swig_callbackviewportRemoved;
    void swig_init_callbacks();
};

class SwigDirector_Resource_Listener : public Ogre::Resource::Listener, public Swig::Director {

public:
    SwigDirector_Resource_Listener();
    virtual ~SwigDirector_Resource_Listener();
    virtual void loadingComplete(Ogre::Resource *arg0);
    virtual void preparingComplete(Ogre::Resource *arg0);
    virtual void unloadingComplete(Ogre::Resource *arg0);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackloadingComplete, SWIG_Callback1_t callbackpreparingComplete, SWIG_Callback2_t callbackunloadingComplete);

private:
    SWIG_Callback0_t swig_callbackloadingComplete;
    SWIG_Callback1_t swig_callbackpreparingComplete;
    SWIG_Callback2_t swig_callbackunloadingComplete;
    void swig_init_callbacks();
};

class SwigDirector_ResourceLoadingListener : public Ogre::ResourceLoadingListener, public Swig::Director {

public:
    SwigDirector_ResourceLoadingListener();
    virtual ~SwigDirector_ResourceLoadingListener();
    virtual Ogre::DataStreamPtr resourceLoading(Ogre::String const &name, Ogre::String const &group, Ogre::Resource *resource);
    virtual void resourceStreamOpened(Ogre::String const &name, Ogre::String const &group, Ogre::Resource *resource, Ogre::DataStreamPtr &dataStream);
    virtual bool resourceCollision(Ogre::Resource *resource, Ogre::ResourceManager *resourceManager);

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)(char *, char *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(char *, char *, void *, void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback2_t)(void *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackresourceLoading, SWIG_Callback1_t callbackresourceStreamOpened, SWIG_Callback2_t callbackresourceCollision);

private:
    SWIG_Callback0_t swig_callbackresourceLoading;
    SWIG_Callback1_t swig_callbackresourceStreamOpened;
    SWIG_Callback2_t swig_callbackresourceCollision;
    void swig_init_callbacks();
};

class SwigDirector_AnimationTrack_Listener : public Ogre::AnimationTrack::Listener, public Swig::Director {

public:
    SwigDirector_AnimationTrack_Listener();
    virtual ~SwigDirector_AnimationTrack_Listener();
    virtual bool getInterpolatedKeyFrame(Ogre::AnimationTrack const *t, Ogre::TimeIndex const &timeIndex, Ogre::KeyFrame *kf);

    typedef unsigned int (SWIGSTDCALL* SWIG_Callback0_t)(void *, void *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackgetInterpolatedKeyFrame);

private:
    SWIG_Callback0_t swig_callbackgetInterpolatedKeyFrame;
    void swig_init_callbacks();
};

class SwigDirector_RenderSystem_Listener : public Ogre::RenderSystem::Listener, public Swig::Director {

public:
    SwigDirector_RenderSystem_Listener();
    virtual ~SwigDirector_RenderSystem_Listener();
    virtual void eventOccurred(Ogre::String const &eventName, Ogre::NameValuePairList const *parameters = 0);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(char *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(char *);
    void swig_connect_director(SWIG_Callback0_t callbackeventOccurred__SWIG_0, SWIG_Callback1_t callbackeventOccurred__SWIG_1);

private:
    SWIG_Callback0_t swig_callbackeventOccurred__SWIG_0;
    SWIG_Callback1_t swig_callbackeventOccurred__SWIG_1;
    void swig_init_callbacks();
};

class SwigDirector_CompositorInstance_Listener : public Ogre::CompositorInstance::Listener, public Swig::Director {

public:
    SwigDirector_CompositorInstance_Listener();
    virtual ~SwigDirector_CompositorInstance_Listener();
    virtual void notifyMaterialSetup(Ogre::uint32 pass_id, Ogre::MaterialPtr &mat);
    virtual void notifyMaterialRender(Ogre::uint32 pass_id, Ogre::MaterialPtr &mat);
    virtual void notifyResourcesCreated(bool forResizeOnly);
    virtual void notifyResourcesReleased(bool forResizeOnly);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(unsigned int, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(unsigned int, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(unsigned int);
    void swig_connect_director(SWIG_Callback0_t callbacknotifyMaterialSetup, SWIG_Callback1_t callbacknotifyMaterialRender, SWIG_Callback2_t callbacknotifyResourcesCreated, SWIG_Callback3_t callbacknotifyResourcesReleased);

private:
    SWIG_Callback0_t swig_callbacknotifyMaterialSetup;
    SWIG_Callback1_t swig_callbacknotifyMaterialRender;
    SWIG_Callback2_t swig_callbacknotifyResourcesCreated;
    SWIG_Callback3_t swig_callbacknotifyResourcesReleased;
    void swig_init_callbacks();
};

class SwigDirector_MaterialSerializer_Listener : public Ogre::MaterialSerializer::Listener, public Swig::Director {

public:
    SwigDirector_MaterialSerializer_Listener();
    virtual ~SwigDirector_MaterialSerializer_Listener();
    virtual void materialEventRaised(Ogre::MaterialSerializer *ser, Ogre::MaterialSerializer::SerializeEvent event, bool &skip, Ogre::Material const *mat);
    virtual void techniqueEventRaised(Ogre::MaterialSerializer *ser, Ogre::MaterialSerializer::SerializeEvent event, bool &skip, Ogre::Technique const *tech);
    virtual void passEventRaised(Ogre::MaterialSerializer *ser, Ogre::MaterialSerializer::SerializeEvent event, bool &skip, Ogre::Pass const *pass);
    virtual void textureUnitStateEventRaised(Ogre::MaterialSerializer *ser, Ogre::MaterialSerializer::SerializeEvent event, bool &skip, Ogre::TextureUnitState const *textureUnit);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *, int, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *, int, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *, int, void *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackmaterialEventRaised, SWIG_Callback1_t callbacktechniqueEventRaised, SWIG_Callback2_t callbackpassEventRaised, SWIG_Callback3_t callbacktextureUnitStateEventRaised);

private:
    SWIG_Callback0_t swig_callbackmaterialEventRaised;
    SWIG_Callback1_t swig_callbacktechniqueEventRaised;
    SWIG_Callback2_t swig_callbackpassEventRaised;
    SWIG_Callback3_t swig_callbacktextureUnitStateEventRaised;
    void swig_init_callbacks();
};

class SwigDirector_MaterialManager_MaterialManager_Listener : public Ogre::MaterialManager::Listener, public Swig::Director {

public:
    SwigDirector_MaterialManager_MaterialManager_Listener();
    virtual ~SwigDirector_MaterialManager_MaterialManager_Listener();
    virtual Ogre::Technique *handleSchemeNotFound(unsigned short schemeIndex, Ogre::String const &schemeName, Ogre::Material *originalMaterial, unsigned short lodIndex, Ogre::Renderable const *rend);
    virtual bool afterIlluminationPassesCreated(Ogre::Technique *technique);
    virtual bool beforeIlluminationPassesCleared(Ogre::Technique *technique);

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)(unsigned short, char *, void *, unsigned short, void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackhandleSchemeNotFound, SWIG_Callback1_t callbackafterIlluminationPassesCreated, SWIG_Callback2_t callbackbeforeIlluminationPassesCleared);

private:
    SWIG_Callback0_t swig_callbackhandleSchemeNotFound;
    SWIG_Callback1_t swig_callbackafterIlluminationPassesCreated;
    SWIG_Callback2_t swig_callbackbeforeIlluminationPassesCleared;
    void swig_init_callbacks();
};

class SwigDirector_MovableObject_Listener : public Ogre::MovableObject::Listener, public Swig::Director {

public:
    SwigDirector_MovableObject_Listener();
    virtual ~SwigDirector_MovableObject_Listener();
    virtual void objectDestroyed(Ogre::MovableObject *arg0);
    virtual void objectAttached(Ogre::MovableObject *arg0);
    virtual void objectDetached(Ogre::MovableObject *arg0);
    virtual void objectMoved(Ogre::MovableObject *arg0);
    virtual bool objectRendering(Ogre::MovableObject const *arg0, Ogre::Camera const *arg1);
    virtual Ogre::LightList const *objectQueryLights(Ogre::MovableObject const *arg0);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback4_t)(void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback5_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackobjectDestroyed, SWIG_Callback1_t callbackobjectAttached, SWIG_Callback2_t callbackobjectDetached, SWIG_Callback3_t callbackobjectMoved, SWIG_Callback4_t callbackobjectRendering, SWIG_Callback5_t callbackobjectQueryLights);

private:
    SWIG_Callback0_t swig_callbackobjectDestroyed;
    SWIG_Callback1_t swig_callbackobjectAttached;
    SWIG_Callback2_t swig_callbackobjectDetached;
    SWIG_Callback3_t swig_callbackobjectMoved;
    SWIG_Callback4_t swig_callbackobjectRendering;
    SWIG_Callback5_t swig_callbackobjectQueryLights;
    void swig_init_callbacks();
};

class SwigDirector_Node_Listener : public Ogre::Node::Listener, public Swig::Director {

public:
    SwigDirector_Node_Listener();
    virtual ~SwigDirector_Node_Listener();
    virtual void nodeUpdated(Ogre::Node const *arg0);
    virtual void nodeDestroyed(Ogre::Node const *arg0);
    virtual void nodeAttached(Ogre::Node const *arg0);
    virtual void nodeDetached(Ogre::Node const *arg0);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbacknodeUpdated, SWIG_Callback1_t callbacknodeDestroyed, SWIG_Callback2_t callbacknodeAttached, SWIG_Callback3_t callbacknodeDetached);

private:
    SWIG_Callback0_t swig_callbacknodeUpdated;
    SWIG_Callback1_t swig_callbacknodeDestroyed;
    SWIG_Callback2_t swig_callbacknodeAttached;
    SWIG_Callback3_t swig_callbacknodeDetached;
    void swig_init_callbacks();
};

class SwigDirector_Camera_Listener : public Ogre::Camera::Listener, public Swig::Director {

public:
    SwigDirector_Camera_Listener();
    virtual ~SwigDirector_Camera_Listener();
    virtual void cameraPreRenderScene(Ogre::Camera *cam);
    virtual void cameraPostRenderScene(Ogre::Camera *cam);
    virtual void cameraDestroyed(Ogre::Camera *cam);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackcameraPreRenderScene, SWIG_Callback1_t callbackcameraPostRenderScene, SWIG_Callback2_t callbackcameraDestroyed);

private:
    SWIG_Callback0_t swig_callbackcameraPreRenderScene;
    SWIG_Callback1_t swig_callbackcameraPostRenderScene;
    SWIG_Callback2_t swig_callbackcameraDestroyed;
    void swig_init_callbacks();
};

class SwigDirector_MeshSerializerListener : public Ogre::MeshSerializerListener, public Swig::Director {

public:
    SwigDirector_MeshSerializerListener();
    virtual ~SwigDirector_MeshSerializerListener();
    virtual void processMaterialName(Ogre::Mesh *mesh, Ogre::String *name);
    virtual void processSkeletonName(Ogre::Mesh *mesh, Ogre::String *name);
    virtual void processMeshCompleted(Ogre::Mesh *mesh);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackprocessMaterialName, SWIG_Callback1_t callbackprocessSkeletonName, SWIG_Callback2_t callbackprocessMeshCompleted);

private:
    SWIG_Callback0_t swig_callbackprocessMaterialName;
    SWIG_Callback1_t swig_callbackprocessSkeletonName;
    SWIG_Callback2_t swig_callbackprocessMeshCompleted;
    void swig_init_callbacks();
};

class SwigDirector_Viewport_Listener : public Ogre::Viewport::Listener, public Swig::Director {

public:
    SwigDirector_Viewport_Listener();
    virtual ~SwigDirector_Viewport_Listener();
    virtual void viewportCameraChanged(Ogre::Viewport *viewport);
    virtual void viewportDimensionsChanged(Ogre::Viewport *viewport);
    virtual void viewportDestroyed(Ogre::Viewport *viewport);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackviewportCameraChanged, SWIG_Callback1_t callbackviewportDimensionsChanged, SWIG_Callback2_t callbackviewportDestroyed);

private:
    SWIG_Callback0_t swig_callbackviewportCameraChanged;
    SWIG_Callback1_t swig_callbackviewportDimensionsChanged;
    SWIG_Callback2_t swig_callbackviewportDestroyed;
    void swig_init_callbacks();
};

class SwigDirector_SceneManager_SceneManager_Listener : public Ogre::SceneManager::Listener, public Swig::Director {

public:
    SwigDirector_SceneManager_SceneManager_Listener();
    virtual ~SwigDirector_SceneManager_SceneManager_Listener();
    virtual void preUpdateSceneGraph(Ogre::SceneManager *source, Ogre::Camera *camera);
    virtual void postUpdateSceneGraph(Ogre::SceneManager *source, Ogre::Camera *camera);
    virtual void preFindVisibleObjects(Ogre::SceneManager *source, Ogre::SceneManager::IlluminationRenderStage irs, Ogre::Viewport *v);
    virtual void postFindVisibleObjects(Ogre::SceneManager *source, Ogre::SceneManager::IlluminationRenderStage irs, Ogre::Viewport *v);
    virtual void sceneManagerDestroyed(Ogre::SceneManager *source);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *, int, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *, int, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackpreUpdateSceneGraph, SWIG_Callback1_t callbackpostUpdateSceneGraph, SWIG_Callback2_t callbackpreFindVisibleObjects, SWIG_Callback3_t callbackpostFindVisibleObjects, SWIG_Callback4_t callbacksceneManagerDestroyed);

private:
    SWIG_Callback0_t swig_callbackpreUpdateSceneGraph;
    SWIG_Callback1_t swig_callbackpostUpdateSceneGraph;
    SWIG_Callback2_t swig_callbackpreFindVisibleObjects;
    SWIG_Callback3_t swig_callbackpostFindVisibleObjects;
    SWIG_Callback4_t swig_callbacksceneManagerDestroyed;
    void swig_init_callbacks();
};


#endif
