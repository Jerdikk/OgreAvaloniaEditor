//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class Rectangle2D : SimpleRenderable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal Rectangle2D(global::System.IntPtr cPtr, bool cMemoryOwn) : base(OgrePINVOKE.Rectangle2D_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Rectangle2D obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_Rectangle2D(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public Rectangle2D(bool includeTextureCoordinates, byte vBufUsage) : this(OgrePINVOKE.new_Rectangle2D__SWIG_0(includeTextureCoordinates, vBufUsage), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Rectangle2D(bool includeTextureCoordinates) : this(OgrePINVOKE.new_Rectangle2D__SWIG_1(includeTextureCoordinates), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Rectangle2D() : this(OgrePINVOKE.new_Rectangle2D__SWIG_2(), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Rectangle2D(string name, bool includeTextureCoordinates, byte vBufUsage) : this(OgrePINVOKE.new_Rectangle2D__SWIG_3(name, includeTextureCoordinates, vBufUsage), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Rectangle2D(string name, bool includeTextureCoordinates) : this(OgrePINVOKE.new_Rectangle2D__SWIG_4(name, includeTextureCoordinates), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Rectangle2D(string name) : this(OgrePINVOKE.new_Rectangle2D__SWIG_5(name), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setCorners(float left, float top, float right, float bottom, bool updateAABB) {
    OgrePINVOKE.Rectangle2D_setCorners__SWIG_0(swigCPtr, left, top, right, bottom, updateAABB);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setCorners(float left, float top, float right, float bottom) {
    OgrePINVOKE.Rectangle2D_setCorners__SWIG_1(swigCPtr, left, top, right, bottom);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNormals(Vector3 topLeft, Vector3 bottomLeft, Vector3 topRight, Vector3 bottomRight) {
    OgrePINVOKE.Rectangle2D_setNormals(swigCPtr, Vector3.getCPtr(topLeft), Vector3.getCPtr(bottomLeft), Vector3.getCPtr(topRight), Vector3.getCPtr(bottomRight));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setUVs(Vector2 topLeft, Vector2 bottomLeft, Vector2 topRight, Vector2 bottomRight) {
    OgrePINVOKE.Rectangle2D_setUVs(swigCPtr, Vector2.getCPtr(topLeft), Vector2.getCPtr(bottomLeft), Vector2.getCPtr(topRight), Vector2.getCPtr(bottomRight));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setDefaultUVs() {
    OgrePINVOKE.Rectangle2D_setDefaultUVs(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public float getSquaredViewDepth(Camera cam) {
    float ret = OgrePINVOKE.Rectangle2D_getSquaredViewDepth(swigCPtr, Camera.getCPtr(cam));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float getBoundingRadius() {
    float ret = OgrePINVOKE.Rectangle2D_getBoundingRadius(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getMovableType() {
    string ret = OgrePINVOKE.Rectangle2D_getMovableType(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
