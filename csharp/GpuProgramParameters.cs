//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class GpuProgramParameters : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GpuProgramParameters(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GpuProgramParameters obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~GpuProgramParameters() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_GpuProgramParameters(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public class AutoConstantDefinition : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal AutoConstantDefinition(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AutoConstantDefinition obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~AutoConstantDefinition() {
      Dispose(false);
    }
  
    public void Dispose() {
      Dispose(true);
      global::System.GC.SuppressFinalize(this);
    }
  
    protected virtual void Dispose(bool disposing) {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            OgrePINVOKE.delete_GpuProgramParameters_AutoConstantDefinition(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
      }
    }
  
    public GpuProgramParameters.AutoConstantType acType {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_acType_set(swigCPtr, (int)value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        GpuProgramParameters.AutoConstantType ret = (GpuProgramParameters.AutoConstantType)OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_acType_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public string name {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_name_set(swigCPtr, value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        string ret = OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_name_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public uint elementCount {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_elementCount_set(swigCPtr, value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        uint ret = OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_elementCount_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public SWIGTYPE_Ogre__GpuProgramParameters__ElementType elementType {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_elementType_set(swigCPtr, (int)value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        SWIGTYPE_Ogre__GpuProgramParameters__ElementType ret = (SWIGTYPE_Ogre__GpuProgramParameters__ElementType)OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_elementType_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public GpuProgramParameters.ACDataType dataType {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_dataType_set(swigCPtr, (int)value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        GpuProgramParameters.ACDataType ret = (GpuProgramParameters.ACDataType)OgrePINVOKE.GpuProgramParameters_AutoConstantDefinition_dataType_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public AutoConstantDefinition(GpuProgramParameters.AutoConstantType _acType, string _name, uint _elementCount, SWIGTYPE_Ogre__GpuProgramParameters__ElementType _elementType, GpuProgramParameters.ACDataType _dataType) : this(OgrePINVOKE.new_GpuProgramParameters_AutoConstantDefinition((int)_acType, _name, _elementCount, (int)_elementType, (int)_dataType), true) {
      if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    }
  
  }

  public class AutoConstantEntry : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal AutoConstantEntry(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AutoConstantEntry obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~AutoConstantEntry() {
      Dispose(false);
    }
  
    public void Dispose() {
      Dispose(true);
      global::System.GC.SuppressFinalize(this);
    }
  
    protected virtual void Dispose(bool disposing) {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            OgrePINVOKE.delete_GpuProgramParameters_AutoConstantEntry(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
      }
    }
  
    public uint physicalIndex {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_physicalIndex_set(swigCPtr, value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        uint ret = OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_physicalIndex_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public GpuProgramParameters.AutoConstantType paramType {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_paramType_set(swigCPtr, (int)value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        GpuProgramParameters.AutoConstantType ret = (GpuProgramParameters.AutoConstantType)OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_paramType_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public uint data {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_data_set(swigCPtr, value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        uint ret = OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_data_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public float fData {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_fData_set(swigCPtr, value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        float ret = OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_fData_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public ushort variability {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_variability_set(swigCPtr, value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        ushort ret = OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_variability_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public byte elementCount {
      set {
        OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_elementCount_set(swigCPtr, value);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        byte ret = OgrePINVOKE.GpuProgramParameters_AutoConstantEntry_elementCount_get(swigCPtr);
        if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public AutoConstantEntry(GpuProgramParameters.AutoConstantType theType, uint theIndex, uint theData, ushort theVariability, byte theElemCount) : this(OgrePINVOKE.new_GpuProgramParameters_AutoConstantEntry__SWIG_0((int)theType, theIndex, theData, theVariability, theElemCount), true) {
      if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public AutoConstantEntry(GpuProgramParameters.AutoConstantType theType, uint theIndex, uint theData, ushort theVariability) : this(OgrePINVOKE.new_GpuProgramParameters_AutoConstantEntry__SWIG_1((int)theType, theIndex, theData, theVariability), true) {
      if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public AutoConstantEntry(GpuProgramParameters.AutoConstantType theType, uint theIndex, float theData, ushort theVariability, byte theElemCount) : this(OgrePINVOKE.new_GpuProgramParameters_AutoConstantEntry__SWIG_2((int)theType, theIndex, theData, theVariability, theElemCount), true) {
      if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public AutoConstantEntry(GpuProgramParameters.AutoConstantType theType, uint theIndex, float theData, ushort theVariability) : this(OgrePINVOKE.new_GpuProgramParameters_AutoConstantEntry__SWIG_3((int)theType, theIndex, theData, theVariability), true) {
      if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    }
  
  }

  public GpuProgramParameters() : this(OgrePINVOKE.new_GpuProgramParameters__SWIG_0(), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public GpuProgramParameters(GpuProgramParameters oth) : this(OgrePINVOKE.new_GpuProgramParameters__SWIG_1(GpuProgramParameters.getCPtr(oth)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _setNamedConstants(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuNamedConstants_t constantmap) {
    OgrePINVOKE.GpuProgramParameters__setNamedConstants(swigCPtr, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuNamedConstants_t.getCPtr(constantmap));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _setLogicalIndexes(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuLogicalBufferStruct_t indexMap) {
    OgrePINVOKE.GpuProgramParameters__setLogicalIndexes(swigCPtr, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuLogicalBufferStruct_t.getCPtr(indexMap));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public bool hasNamedParameters() {
    bool ret = OgrePINVOKE.GpuProgramParameters_hasNamedParameters(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool hasLogicalIndexedParameters() {
    bool ret = OgrePINVOKE.GpuProgramParameters_hasLogicalIndexedParameters(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setConstant(uint index, Vector4 vec) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_0(swigCPtr, index, Vector4.getCPtr(vec));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, float val) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_1(swigCPtr, index, val);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, Vector3 vec) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_2(swigCPtr, index, Vector3.getCPtr(vec));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, Vector2 vec) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_3(swigCPtr, index, Vector2.getCPtr(vec));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, Matrix4 m) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_4(swigCPtr, index, Matrix4.getCPtr(m));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, Matrix4 m, uint numEntries) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_5(swigCPtr, index, Matrix4.getCPtr(m), numEntries);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, ColourValue colour) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_6(swigCPtr, index, ColourValue.getCPtr(colour));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, SWIGTYPE_p_float val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_7(swigCPtr, index, SWIGTYPE_p_float.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, SWIGTYPE_p_double val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_8(swigCPtr, index, SWIGTYPE_p_double.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, SWIGTYPE_p_int val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_9(swigCPtr, index, SWIGTYPE_p_int.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setConstant(uint index, SWIGTYPE_p_unsigned_int val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setConstant__SWIG_10(swigCPtr, index, SWIGTYPE_p_unsigned_int.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _writeRawConstants(uint physicalIndex, SWIGTYPE_p_double val, uint count) {
    OgrePINVOKE.GpuProgramParameters__writeRawConstants(swigCPtr, physicalIndex, SWIGTYPE_p_double.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _writeRegisters(uint index, SWIGTYPE_p_int val, uint count) {
    OgrePINVOKE.GpuProgramParameters__writeRegisters(swigCPtr, index, SWIGTYPE_p_int.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _writeRawConstant(uint physicalIndex, Matrix4 m, uint elementCount) {
    OgrePINVOKE.GpuProgramParameters__writeRawConstant__SWIG_3(swigCPtr, physicalIndex, Matrix4.getCPtr(m), elementCount);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _writeRawConstant(uint physicalIndex, Matrix3 m, uint elementCount) {
    OgrePINVOKE.GpuProgramParameters__writeRawConstant__SWIG_4(swigCPtr, physicalIndex, Matrix3.getCPtr(m), elementCount);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _writeRawConstant(uint physicalIndex, TransformBaseReal m, uint numEntries) {
    OgrePINVOKE.GpuProgramParameters__writeRawConstant__SWIG_5(swigCPtr, physicalIndex, TransformBaseReal.getCPtr(m), numEntries);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _writeRawConstant(uint physicalIndex, ColourValue colour, uint count) {
    OgrePINVOKE.GpuProgramParameters__writeRawConstant__SWIG_6(swigCPtr, physicalIndex, ColourValue.getCPtr(colour), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _writeRawConstant(uint physicalIndex, ColourValue colour) {
    OgrePINVOKE.GpuProgramParameters__writeRawConstant__SWIG_7(swigCPtr, physicalIndex, ColourValue.getCPtr(colour));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _readRawConstants(uint physicalIndex, uint count, SWIGTYPE_p_float dest) {
    OgrePINVOKE.GpuProgramParameters__readRawConstants__SWIG_0(swigCPtr, physicalIndex, count, SWIGTYPE_p_float.getCPtr(dest));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _readRawConstants(uint physicalIndex, uint count, SWIGTYPE_p_int dest) {
    OgrePINVOKE.GpuProgramParameters__readRawConstants__SWIG_1(swigCPtr, physicalIndex, count, SWIGTYPE_p_int.getCPtr(dest));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public GpuConstantDefinition getConstantDefinition(string name) {
    GpuConstantDefinition ret = new GpuConstantDefinition(OgrePINVOKE.GpuProgramParameters_getConstantDefinition(swigCPtr, name), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GpuNamedConstants getConstantDefinitions() {
    GpuNamedConstants ret = new GpuNamedConstants(OgrePINVOKE.GpuProgramParameters_getConstantDefinitions(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuLogicalBufferStruct_t getLogicalBufferStruct() {
    SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuLogicalBufferStruct_t ret = new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuLogicalBufferStruct_t(OgrePINVOKE.GpuProgramParameters_getLogicalBufferStruct(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getLogicalIndexForPhysicalIndex(uint physicalIndex) {
    uint ret = OgrePINVOKE.GpuProgramParameters_getLogicalIndexForPhysicalIndex(swigCPtr, physicalIndex);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__vectorT_unsigned_char_t getConstantList() {
    SWIGTYPE_p_std__vectorT_unsigned_char_t ret = new SWIGTYPE_p_std__vectorT_unsigned_char_t(OgrePINVOKE.GpuProgramParameters_getConstantList(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_float getFloatPointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getFloatPointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_double getDoublePointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getDoublePointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_int getIntPointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getIntPointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned_int getUnsignedIntPointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getUnsignedIntPointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_unsigned_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_int getRegPointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getRegPointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__vectorT_Ogre__GpuProgramParameters__AutoConstantEntry_t getAutoConstantList() {
    SWIGTYPE_p_std__vectorT_Ogre__GpuProgramParameters__AutoConstantEntry_t ret = new SWIGTYPE_p_std__vectorT_Ogre__GpuProgramParameters__AutoConstantEntry_t(OgrePINVOKE.GpuProgramParameters_getAutoConstantList(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setAutoConstant(uint index, GpuProgramParameters.AutoConstantType acType, uint extraInfo) {
    OgrePINVOKE.GpuProgramParameters_setAutoConstant__SWIG_0(swigCPtr, index, (int)acType, extraInfo);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAutoConstant(uint index, GpuProgramParameters.AutoConstantType acType) {
    OgrePINVOKE.GpuProgramParameters_setAutoConstant__SWIG_1(swigCPtr, index, (int)acType);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAutoConstantReal(uint index, GpuProgramParameters.AutoConstantType acType, float rData) {
    OgrePINVOKE.GpuProgramParameters_setAutoConstantReal(swigCPtr, index, (int)acType, rData);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAutoConstant(uint index, GpuProgramParameters.AutoConstantType acType, ushort extraInfo1, ushort extraInfo2) {
    OgrePINVOKE.GpuProgramParameters_setAutoConstant__SWIG_2(swigCPtr, index, (int)acType, extraInfo1, extraInfo2);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _setRawAutoConstant(uint physicalIndex, GpuProgramParameters.AutoConstantType acType, uint extraInfo, ushort variability, byte elementSize) {
    OgrePINVOKE.GpuProgramParameters__setRawAutoConstant__SWIG_0(swigCPtr, physicalIndex, (int)acType, extraInfo, variability, elementSize);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _setRawAutoConstant(uint physicalIndex, GpuProgramParameters.AutoConstantType acType, uint extraInfo, ushort variability) {
    OgrePINVOKE.GpuProgramParameters__setRawAutoConstant__SWIG_1(swigCPtr, physicalIndex, (int)acType, extraInfo, variability);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _setRawAutoConstantReal(uint physicalIndex, GpuProgramParameters.AutoConstantType acType, float rData, ushort variability, byte elementSize) {
    OgrePINVOKE.GpuProgramParameters__setRawAutoConstantReal__SWIG_0(swigCPtr, physicalIndex, (int)acType, rData, variability, elementSize);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _setRawAutoConstantReal(uint physicalIndex, GpuProgramParameters.AutoConstantType acType, float rData, ushort variability) {
    OgrePINVOKE.GpuProgramParameters__setRawAutoConstantReal__SWIG_1(swigCPtr, physicalIndex, (int)acType, rData, variability);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void clearAutoConstant(uint index) {
    OgrePINVOKE.GpuProgramParameters_clearAutoConstant(swigCPtr, index);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void clearAutoConstants() {
    OgrePINVOKE.GpuProgramParameters_clearAutoConstants(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__vectorT_Ogre__GpuProgramParameters__AutoConstantEntry_t getAutoConstants() {
    SWIGTYPE_p_std__vectorT_Ogre__GpuProgramParameters__AutoConstantEntry_t ret = new SWIGTYPE_p_std__vectorT_Ogre__GpuProgramParameters__AutoConstantEntry_t(OgrePINVOKE.GpuProgramParameters_getAutoConstants(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getAutoConstantCount() {
    uint ret = OgrePINVOKE.GpuProgramParameters_getAutoConstantCount(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GpuProgramParameters.AutoConstantEntry getAutoConstantEntry(uint index) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getAutoConstantEntry(swigCPtr, index);
    GpuProgramParameters.AutoConstantEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuProgramParameters.AutoConstantEntry(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool hasAutoConstants() {
    bool ret = OgrePINVOKE.GpuProgramParameters_hasAutoConstants(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GpuProgramParameters.AutoConstantEntry findFloatAutoConstantEntry(uint logicalIndex) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_findFloatAutoConstantEntry(swigCPtr, logicalIndex);
    GpuProgramParameters.AutoConstantEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuProgramParameters.AutoConstantEntry(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GpuProgramParameters.AutoConstantEntry findAutoConstantEntry(string paramName) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_findAutoConstantEntry(swigCPtr, paramName);
    GpuProgramParameters.AutoConstantEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuProgramParameters.AutoConstantEntry(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GpuProgramParameters.AutoConstantEntry _findRawAutoConstantEntryFloat(uint physicalIndex) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters__findRawAutoConstantEntryFloat(swigCPtr, physicalIndex);
    GpuProgramParameters.AutoConstantEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuProgramParameters.AutoConstantEntry(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setNamedAutoConstant(string name, GpuProgramParameters.AutoConstantType acType, uint extraInfo) {
    OgrePINVOKE.GpuProgramParameters_setNamedAutoConstant__SWIG_0(swigCPtr, name, (int)acType, extraInfo);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedAutoConstant(string name, GpuProgramParameters.AutoConstantType acType) {
    OgrePINVOKE.GpuProgramParameters_setNamedAutoConstant__SWIG_1(swigCPtr, name, (int)acType);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedAutoConstantReal(string name, GpuProgramParameters.AutoConstantType acType, float rData) {
    OgrePINVOKE.GpuProgramParameters_setNamedAutoConstantReal(swigCPtr, name, (int)acType, rData);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedAutoConstant(string name, GpuProgramParameters.AutoConstantType acType, ushort extraInfo1, ushort extraInfo2) {
    OgrePINVOKE.GpuProgramParameters_setNamedAutoConstant__SWIG_2(swigCPtr, name, (int)acType, extraInfo1, extraInfo2);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstantFromTime(string name, float factor) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstantFromTime(swigCPtr, name, factor);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void clearNamedAutoConstant(string name) {
    OgrePINVOKE.GpuProgramParameters_clearNamedAutoConstant(swigCPtr, name);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _updateAutoParams(SWIGTYPE_p_Ogre__AutoParamDataSource source, ushort variabilityMask) {
    OgrePINVOKE.GpuProgramParameters__updateAutoParams(swigCPtr, SWIGTYPE_p_Ogre__AutoParamDataSource.getCPtr(source), variabilityMask);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setIgnoreMissingParams(bool state) {
    OgrePINVOKE.GpuProgramParameters_setIgnoreMissingParams(swigCPtr, state);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, float val) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_0(swigCPtr, name, val);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, int val) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_1(swigCPtr, name, val);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, uint val) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_2(swigCPtr, name, val);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, Vector4 val) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_3(swigCPtr, name, Vector4.getCPtr(val));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, Vector3 val) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_4(swigCPtr, name, Vector3.getCPtr(val));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, Vector2 val) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_5(swigCPtr, name, Vector2.getCPtr(val));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, Matrix4 val) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_6(swigCPtr, name, Matrix4.getCPtr(val));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, ColourValue colour) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_7(swigCPtr, name, ColourValue.getCPtr(colour));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, Matrix4 m, uint numEntries) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_8(swigCPtr, name, Matrix4.getCPtr(m), numEntries);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_float val, uint count, uint multiple) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_9(swigCPtr, name, SWIGTYPE_p_float.getCPtr(val), count, multiple);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_float val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_10(swigCPtr, name, SWIGTYPE_p_float.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_double val, uint count, uint multiple) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_11(swigCPtr, name, SWIGTYPE_p_double.getCPtr(val), count, multiple);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_double val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_12(swigCPtr, name, SWIGTYPE_p_double.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_int val, uint count, uint multiple) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_13(swigCPtr, name, SWIGTYPE_p_int.getCPtr(val), count, multiple);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_int val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_14(swigCPtr, name, SWIGTYPE_p_int.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_unsigned_int val, uint count, uint multiple) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_15(swigCPtr, name, SWIGTYPE_p_unsigned_int.getCPtr(val), count, multiple);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_unsigned_int val, uint count) {
    OgrePINVOKE.GpuProgramParameters_setNamedConstant__SWIG_16(swigCPtr, name, SWIGTYPE_p_unsigned_int.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public GpuConstantDefinition _findNamedConstantDefinition(string name, bool throwExceptionIfMissing) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters__findNamedConstantDefinition__SWIG_0(swigCPtr, name, throwExceptionIfMissing);
    GpuConstantDefinition ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuConstantDefinition(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GpuConstantDefinition _findNamedConstantDefinition(string name) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters__findNamedConstantDefinition__SWIG_1(swigCPtr, name);
    GpuConstantDefinition ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuConstantDefinition(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint _getConstantPhysicalIndex(uint logicalIndex, uint requestedSize, ushort variability, BaseConstantType type) {
    uint ret = OgrePINVOKE.GpuProgramParameters__getConstantPhysicalIndex(swigCPtr, logicalIndex, requestedSize, variability, (int)type);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setTransposeMatrices(bool val) {
    OgrePINVOKE.GpuProgramParameters_setTransposeMatrices(swigCPtr, val);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getTransposeMatrices() {
    bool ret = OgrePINVOKE.GpuProgramParameters_getTransposeMatrices(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void copyConstantsFrom(GpuProgramParameters source) {
    OgrePINVOKE.GpuProgramParameters_copyConstantsFrom(swigCPtr, GpuProgramParameters.getCPtr(source));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void copyMatchingNamedConstantsFrom(GpuProgramParameters source) {
    OgrePINVOKE.GpuProgramParameters_copyMatchingNamedConstantsFrom(swigCPtr, GpuProgramParameters.getCPtr(source));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public static GpuProgramParameters.AutoConstantDefinition getAutoConstantDefinition(string name) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getAutoConstantDefinition__SWIG_0(name);
    GpuProgramParameters.AutoConstantDefinition ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuProgramParameters.AutoConstantDefinition(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static GpuProgramParameters.AutoConstantDefinition getAutoConstantDefinition(GpuProgramParameters.AutoConstantType type) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuProgramParameters_getAutoConstantDefinition__SWIG_1((int)type);
    GpuProgramParameters.AutoConstantDefinition ret = (cPtr == global::System.IntPtr.Zero) ? null : new GpuProgramParameters.AutoConstantDefinition(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint getNumAutoConstantDefinitions() {
    uint ret = OgrePINVOKE.GpuProgramParameters_getNumAutoConstantDefinitions();
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void incPassIterationNumber() {
    OgrePINVOKE.GpuProgramParameters_incPassIterationNumber(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void addSharedParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t sharedParams) {
    OgrePINVOKE.GpuProgramParameters_addSharedParameters__SWIG_0(swigCPtr, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t.getCPtr(sharedParams));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void addSharedParameters(string sharedParamsName) {
    OgrePINVOKE.GpuProgramParameters_addSharedParameters__SWIG_1(swigCPtr, sharedParamsName);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isUsingSharedParameters(string sharedParamsName) {
    bool ret = OgrePINVOKE.GpuProgramParameters_isUsingSharedParameters(swigCPtr, sharedParamsName);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void removeSharedParameters(string sharedParamsName) {
    OgrePINVOKE.GpuProgramParameters_removeSharedParameters(swigCPtr, sharedParamsName);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void removeAllSharedParameters() {
    OgrePINVOKE.GpuProgramParameters_removeAllSharedParameters(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__vectorT_Ogre__GpuSharedParametersUsage_t getSharedParameters() {
    SWIGTYPE_p_std__vectorT_Ogre__GpuSharedParametersUsage_t ret = new SWIGTYPE_p_std__vectorT_Ogre__GpuSharedParametersUsage_t(OgrePINVOKE.GpuProgramParameters_getSharedParameters(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void _copySharedParams() {
    OgrePINVOKE.GpuProgramParameters__copySharedParams(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _updateSharedParams() {
    OgrePINVOKE.GpuProgramParameters__updateSharedParams(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public uint calculateSize() {
    uint ret = OgrePINVOKE.GpuProgramParameters_calculateSize(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum AutoConstantType {
    ACT_WORLD_MATRIX,
    ACT_INVERSE_WORLD_MATRIX,
    ACT_TRANSPOSE_WORLD_MATRIX,
    ACT_INVERSE_TRANSPOSE_WORLD_MATRIX,
    ACT_BONE_MATRIX_ARRAY_3x4,
    ACT_WORLD_MATRIX_ARRAY_3x4 = ACT_BONE_MATRIX_ARRAY_3x4,
    ACT_BONE_MATRIX_ARRAY,
    ACT_WORLD_MATRIX_ARRAY = ACT_BONE_MATRIX_ARRAY,
    ACT_BONE_DUALQUATERNION_ARRAY_2x4,
    ACT_WORLD_DUALQUATERNION_ARRAY_2x4 = ACT_BONE_DUALQUATERNION_ARRAY_2x4,
    ACT_BONE_SCALE_SHEAR_MATRIX_ARRAY_3x4,
    ACT_WORLD_SCALE_SHEAR_MATRIX_ARRAY_3x4 = ACT_BONE_SCALE_SHEAR_MATRIX_ARRAY_3x4,
    ACT_VIEW_MATRIX,
    ACT_INVERSE_VIEW_MATRIX,
    ACT_TRANSPOSE_VIEW_MATRIX,
    ACT_INVERSE_TRANSPOSE_VIEW_MATRIX,
    ACT_PROJECTION_MATRIX,
    ACT_INVERSE_PROJECTION_MATRIX,
    ACT_TRANSPOSE_PROJECTION_MATRIX,
    ACT_INVERSE_TRANSPOSE_PROJECTION_MATRIX,
    ACT_VIEWPROJ_MATRIX,
    ACT_INVERSE_VIEWPROJ_MATRIX,
    ACT_TRANSPOSE_VIEWPROJ_MATRIX,
    ACT_INVERSE_TRANSPOSE_VIEWPROJ_MATRIX,
    ACT_WORLDVIEW_MATRIX,
    ACT_INVERSE_WORLDVIEW_MATRIX,
    ACT_TRANSPOSE_WORLDVIEW_MATRIX,
    ACT_INVERSE_TRANSPOSE_WORLDVIEW_MATRIX,
    ACT_NORMAL_MATRIX,
    ACT_WORLDVIEWPROJ_MATRIX,
    ACT_INVERSE_WORLDVIEWPROJ_MATRIX,
    ACT_TRANSPOSE_WORLDVIEWPROJ_MATRIX,
    ACT_INVERSE_TRANSPOSE_WORLDVIEWPROJ_MATRIX,
    ACT_RENDER_TARGET_FLIPPING,
    ACT_VERTEX_WINDING,
    ACT_FOG_COLOUR,
    ACT_FOG_PARAMS,
    ACT_SURFACE_AMBIENT_COLOUR,
    ACT_SURFACE_DIFFUSE_COLOUR,
    ACT_SURFACE_SPECULAR_COLOUR,
    ACT_SURFACE_EMISSIVE_COLOUR,
    ACT_SURFACE_SHININESS,
    ACT_SURFACE_ALPHA_REJECTION_VALUE,
    ACT_LIGHT_COUNT,
    ACT_AMBIENT_LIGHT_COLOUR,
    ACT_LIGHT_DIFFUSE_COLOUR,
    ACT_LIGHT_SPECULAR_COLOUR,
    ACT_LIGHT_ATTENUATION,
    ACT_SPOTLIGHT_PARAMS,
    ACT_LIGHT_POSITION,
    ACT_LIGHT_POSITION_OBJECT_SPACE,
    ACT_LIGHT_POSITION_VIEW_SPACE,
    ACT_LIGHT_DIRECTION,
    ACT_LIGHT_DIRECTION_OBJECT_SPACE,
    ACT_LIGHT_DIRECTION_VIEW_SPACE,
    ACT_LIGHT_DISTANCE_OBJECT_SPACE,
    ACT_LIGHT_POWER_SCALE,
    ACT_LIGHT_DIFFUSE_COLOUR_POWER_SCALED,
    ACT_LIGHT_SPECULAR_COLOUR_POWER_SCALED,
    ACT_LIGHT_DIFFUSE_COLOUR_ARRAY,
    ACT_LIGHT_SPECULAR_COLOUR_ARRAY,
    ACT_LIGHT_DIFFUSE_COLOUR_POWER_SCALED_ARRAY,
    ACT_LIGHT_SPECULAR_COLOUR_POWER_SCALED_ARRAY,
    ACT_LIGHT_ATTENUATION_ARRAY,
    ACT_LIGHT_POSITION_ARRAY,
    ACT_LIGHT_POSITION_OBJECT_SPACE_ARRAY,
    ACT_LIGHT_POSITION_VIEW_SPACE_ARRAY,
    ACT_LIGHT_DIRECTION_ARRAY,
    ACT_LIGHT_DIRECTION_OBJECT_SPACE_ARRAY,
    ACT_LIGHT_DIRECTION_VIEW_SPACE_ARRAY,
    ACT_LIGHT_DISTANCE_OBJECT_SPACE_ARRAY,
    ACT_LIGHT_POWER_SCALE_ARRAY,
    ACT_SPOTLIGHT_PARAMS_ARRAY,
    ACT_DERIVED_AMBIENT_LIGHT_COLOUR,
    ACT_DERIVED_SCENE_COLOUR,
    ACT_DERIVED_LIGHT_DIFFUSE_COLOUR,
    ACT_DERIVED_LIGHT_SPECULAR_COLOUR,
    ACT_DERIVED_LIGHT_DIFFUSE_COLOUR_ARRAY,
    ACT_DERIVED_LIGHT_SPECULAR_COLOUR_ARRAY,
    ACT_LIGHT_NUMBER,
    ACT_LIGHT_CASTS_SHADOWS,
    ACT_LIGHT_CASTS_SHADOWS_ARRAY,
    ACT_SHADOW_EXTRUSION_DISTANCE,
    ACT_CAMERA_POSITION,
    ACT_CAMERA_POSITION_OBJECT_SPACE,
    ACT_CAMERA_RELATIVE_POSITION,
    ACT_TEXTURE_VIEWPROJ_MATRIX,
    ACT_TEXTURE_VIEWPROJ_MATRIX_ARRAY,
    ACT_TEXTURE_WORLDVIEWPROJ_MATRIX,
    ACT_TEXTURE_WORLDVIEWPROJ_MATRIX_ARRAY,
    ACT_SPOTLIGHT_VIEWPROJ_MATRIX,
    ACT_SPOTLIGHT_VIEWPROJ_MATRIX_ARRAY,
    ACT_SPOTLIGHT_WORLDVIEWPROJ_MATRIX,
    ACT_SPOTLIGHT_WORLDVIEWPROJ_MATRIX_ARRAY,
    ACT_CUSTOM,
    ACT_TIME,
    ACT_TIME_0_X,
    ACT_COSTIME_0_X,
    ACT_SINTIME_0_X,
    ACT_TANTIME_0_X,
    ACT_TIME_0_X_PACKED,
    ACT_TIME_0_1,
    ACT_COSTIME_0_1,
    ACT_SINTIME_0_1,
    ACT_TANTIME_0_1,
    ACT_TIME_0_1_PACKED,
    ACT_TIME_0_2PI,
    ACT_COSTIME_0_2PI,
    ACT_SINTIME_0_2PI,
    ACT_TANTIME_0_2PI,
    ACT_TIME_0_2PI_PACKED,
    ACT_FRAME_TIME,
    ACT_FPS,
    ACT_VIEWPORT_WIDTH,
    ACT_VIEWPORT_HEIGHT,
    ACT_INVERSE_VIEWPORT_WIDTH,
    ACT_INVERSE_VIEWPORT_HEIGHT,
    ACT_VIEWPORT_SIZE,
    ACT_VIEW_DIRECTION,
    ACT_VIEW_SIDE_VECTOR,
    ACT_VIEW_UP_VECTOR,
    ACT_FOV,
    ACT_NEAR_CLIP_DISTANCE,
    ACT_FAR_CLIP_DISTANCE,
    ACT_PASS_NUMBER,
    ACT_PASS_ITERATION_NUMBER,
    ACT_ANIMATION_PARAMETRIC,
    ACT_TEXEL_OFFSETS,
    ACT_SCENE_DEPTH_RANGE,
    ACT_SHADOW_SCENE_DEPTH_RANGE,
    ACT_SHADOW_SCENE_DEPTH_RANGE_ARRAY,
    ACT_SHADOW_COLOUR,
    ACT_TEXTURE_SIZE,
    ACT_INVERSE_TEXTURE_SIZE,
    ACT_PACKED_TEXTURE_SIZE,
    ACT_TEXTURE_MATRIX,
    ACT_LOD_CAMERA_POSITION,
    ACT_LOD_CAMERA_POSITION_OBJECT_SPACE,
    ACT_LIGHT_CUSTOM,
    ACT_POINT_PARAMS,
    ACT_MATERIAL_LOD_INDEX
  }

  public enum ACDataType {
    ACDT_NONE,
    ACDT_INT,
    ACDT_REAL
  }

}

}
