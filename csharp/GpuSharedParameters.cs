//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class GpuSharedParameters : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GpuSharedParameters(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GpuSharedParameters obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~GpuSharedParameters() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_GpuSharedParameters(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public GpuSharedParameters(string name) : this(OgrePINVOKE.new_GpuSharedParameters(name), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
    string ret = OgrePINVOKE.GpuSharedParameters_getName(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void addConstantDefinition(string name, SWIGTYPE_Ogre__GpuConstantType constType, uint arraySize) {
    OgrePINVOKE.GpuSharedParameters_addConstantDefinition__SWIG_0(swigCPtr, name, (int)constType, arraySize);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void addConstantDefinition(string name, SWIGTYPE_Ogre__GpuConstantType constType) {
    OgrePINVOKE.GpuSharedParameters_addConstantDefinition__SWIG_1(swigCPtr, name, (int)constType);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void removeConstantDefinition(string name) {
    OgrePINVOKE.GpuSharedParameters_removeConstantDefinition(swigCPtr, name);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void removeAllConstantDefinitions() {
    OgrePINVOKE.GpuSharedParameters_removeAllConstantDefinitions(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public uint getVersion() {
    uint ret = OgrePINVOKE.GpuSharedParameters_getVersion(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint calculateSize() {
    uint ret = OgrePINVOKE.GpuSharedParameters_calculateSize(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isDirty() {
    bool ret = OgrePINVOKE.GpuSharedParameters_isDirty(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void _markClean() {
    OgrePINVOKE.GpuSharedParameters__markClean(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void _markDirty() {
    OgrePINVOKE.GpuSharedParameters__markDirty(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public GpuConstantDefinition getConstantDefinition(string name) {
    GpuConstantDefinition ret = new GpuConstantDefinition(OgrePINVOKE.GpuSharedParameters_getConstantDefinition(swigCPtr, name), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GpuNamedConstants getConstantDefinitions() {
    GpuNamedConstants ret = new GpuNamedConstants(OgrePINVOKE.GpuSharedParameters_getConstantDefinitions(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setNamedConstant(string name, Matrix4 m) {
    OgrePINVOKE.GpuSharedParameters_setNamedConstant__SWIG_2(swigCPtr, name, Matrix4.getCPtr(m));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, Matrix4 m, uint numEntries) {
    OgrePINVOKE.GpuSharedParameters_setNamedConstant__SWIG_3(swigCPtr, name, Matrix4.getCPtr(m), numEntries);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_float val, uint count) {
    OgrePINVOKE.GpuSharedParameters_setNamedConstant__SWIG_4(swigCPtr, name, SWIGTYPE_p_float.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_double val, uint count) {
    OgrePINVOKE.GpuSharedParameters_setNamedConstant__SWIG_5(swigCPtr, name, SWIGTYPE_p_double.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, ColourValue colour) {
    OgrePINVOKE.GpuSharedParameters_setNamedConstant__SWIG_6(swigCPtr, name, ColourValue.getCPtr(colour));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_int val, uint count) {
    OgrePINVOKE.GpuSharedParameters_setNamedConstant__SWIG_7(swigCPtr, name, SWIGTYPE_p_int.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNamedConstant(string name, SWIGTYPE_p_unsigned_int val, uint count) {
    OgrePINVOKE.GpuSharedParameters_setNamedConstant__SWIG_8(swigCPtr, name, SWIGTYPE_p_unsigned_int.getCPtr(val), count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_float getFloatPointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuSharedParameters_getFloatPointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_double getDoublePointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuSharedParameters_getDoublePointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_int getIntPointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuSharedParameters_getIntPointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned_int getUnsignedIntPointer(uint pos) {
    global::System.IntPtr cPtr = OgrePINVOKE.GpuSharedParameters_getUnsignedIntPointer__SWIG_0(swigCPtr, pos);
    SWIGTYPE_p_unsigned_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__vectorT_unsigned_char_t getConstantList() {
    SWIGTYPE_p_std__vectorT_unsigned_char_t ret = new SWIGTYPE_p_std__vectorT_unsigned_char_t(OgrePINVOKE.GpuSharedParameters_getConstantList(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void _setHardwareBuffer(HardwareBufferPtr data) {
    OgrePINVOKE.GpuSharedParameters__setHardwareBuffer(swigCPtr, HardwareBufferPtr.getCPtr(data));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public HardwareBufferPtr _getHardwareBuffer() {
    HardwareBufferPtr ret = new HardwareBufferPtr(OgrePINVOKE.GpuSharedParameters__getHardwareBuffer(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void _upload() {
    OgrePINVOKE.GpuSharedParameters__upload(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void download() {
    OgrePINVOKE.GpuSharedParameters_download(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

}

}
