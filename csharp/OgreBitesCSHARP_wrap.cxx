/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_Bites(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_Bites(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_Bites(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };
}


/* Includes the header in the wrapper code */
#include "Ogre.h"
#include "OgreBuildSettings.h"
#include "OgreComponents.h"
#include "OgreApplicationContextBase.h"
#include "OgreApplicationContext.h"
#include "OgreSGTechniqueResolverListener.h"
#include "OgreCameraMan.h"
#include "OgreTrays.h"
#include "OgreAdvancedRenderControls.h"
#include "OgrePredefinedControllers.h"

#include "OgreImGuiInputListener.h"


#include <typeinfo>
#include <stdexcept>


#include <vector>
#include <algorithm>
#include <stdexcept>


#include <string>


SWIGINTERN void SWIG_CSharpException(int code, const char *msg) {
  if (code == SWIG_ValueError) {
    SWIG_CSharpExceptionArgumentCodes exception_code = SWIG_CSharpArgumentOutOfRangeException;
    SWIG_CSharpSetPendingExceptionArgument(exception_code, msg, 0);
  } else {
    SWIG_CSharpExceptionCodes exception_code = SWIG_CSharpApplicationException;
    switch(code) {
    case SWIG_MemoryError:
      exception_code = SWIG_CSharpOutOfMemoryException;
      break;
    case SWIG_IndexError:
      exception_code = SWIG_CSharpIndexOutOfRangeException;
      break;
    case SWIG_DivisionByZero:
      exception_code = SWIG_CSharpDivideByZeroException;
      break;
    case SWIG_IOError:
      exception_code = SWIG_CSharpIOException;
      break;
    case SWIG_OverflowError:
      exception_code = SWIG_CSharpOverflowException;
      break;
    case SWIG_RuntimeError:
    case SWIG_TypeError:
    case SWIG_SyntaxError:
    case SWIG_SystemError:
    case SWIG_UnknownError:
    default:
      exception_code = SWIG_CSharpApplicationException;
      break;
    }
    SWIG_CSharpSetPendingException(exception_code, msg);
  }
}


#include <typeinfo>
#include <stdexcept>


#include <stdint.h>		// Use the C99 official header

SWIGINTERN std::vector< OgreBites::InputListener * > *new_std_vector_Sl_OgreBites_InputListener_Sm__Sg___SWIG_2(int capacity){
        std::vector< OgreBites::InputListener * >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< OgreBites::InputListener * >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN OgreBites::InputListener *std_vector_Sl_OgreBites_InputListener_Sm__Sg__getitemcopy(std::vector< OgreBites::InputListener * > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< OgreBites::InputListener * >::value_type const &std_vector_Sl_OgreBites_InputListener_Sm__Sg__getitem(std::vector< OgreBites::InputListener * > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__setitem(std::vector< OgreBites::InputListener * > *self,int index,OgreBites::InputListener *const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__AddRange(std::vector< OgreBites::InputListener * > *self,std::vector< OgreBites::InputListener * > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< OgreBites::InputListener * > *std_vector_Sl_OgreBites_InputListener_Sm__Sg__GetRange(std::vector< OgreBites::InputListener * > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< OgreBites::InputListener * >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__Insert(std::vector< OgreBites::InputListener * > *self,int index,OgreBites::InputListener *const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__InsertRange(std::vector< OgreBites::InputListener * > *self,int index,std::vector< OgreBites::InputListener * > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__RemoveAt(std::vector< OgreBites::InputListener * > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__RemoveRange(std::vector< OgreBites::InputListener * > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< OgreBites::InputListener * > *std_vector_Sl_OgreBites_InputListener_Sm__Sg__Repeat(OgreBites::InputListener *const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< OgreBites::InputListener * >(count, value);
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__Reverse__SWIG_0(std::vector< OgreBites::InputListener * > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__Reverse__SWIG_1(std::vector< OgreBites::InputListener * > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_OgreBites_InputListener_Sm__Sg__SetRange(std::vector< OgreBites::InputListener * > *self,int index,std::vector< OgreBites::InputListener * > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_OgreBites_InputListener_Sm__Sg__Contains(std::vector< OgreBites::InputListener * > *self,OgreBites::InputListener *const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_OgreBites_InputListener_Sm__Sg__IndexOf(std::vector< OgreBites::InputListener * > *self,OgreBites::InputListener *const &value){
        int index = -1;
        std::vector< OgreBites::InputListener * >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_OgreBites_InputListener_Sm__Sg__LastIndexOf(std::vector< OgreBites::InputListener * > *self,OgreBites::InputListener *const &value){
        int index = -1;
        std::vector< OgreBites::InputListener * >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_OgreBites_InputListener_Sm__Sg__Remove(std::vector< OgreBites::InputListener * > *self,OgreBites::InputListener *const &value){
        std::vector< OgreBites::InputListener * >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "OgreBitesCSHARP_wrap.h"

SwigDirector_InputListener::SwigDirector_InputListener() : OgreBites::InputListener(), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_InputListener::~SwigDirector_InputListener() {
  
}


void SwigDirector_InputListener::frameRendered(Ogre::FrameEvent const &evt) {
  void * jevt = 0 ;
  
  if (!swig_callbackframeRendered) {
    OgreBites::InputListener::frameRendered(evt);
    return;
  } else {
    jevt = (Ogre::FrameEvent *) &evt; 
    swig_callbackframeRendered(jevt);
  }
}

bool SwigDirector_InputListener::keyPressed(OgreBites::KeyboardEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackkeyPressed) {
    return OgreBites::InputListener::keyPressed(evt);
  } else {
    jevt = (OgreBites::KeyboardEvent *) &evt; 
    jresult = (unsigned int) swig_callbackkeyPressed(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::keyReleased(OgreBites::KeyboardEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackkeyReleased) {
    return OgreBites::InputListener::keyReleased(evt);
  } else {
    jevt = (OgreBites::KeyboardEvent *) &evt; 
    jresult = (unsigned int) swig_callbackkeyReleased(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::touchMoved(OgreBites::TouchFingerEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbacktouchMoved) {
    return OgreBites::InputListener::touchMoved(evt);
  } else {
    jevt = (OgreBites::TouchFingerEvent *) &evt; 
    jresult = (unsigned int) swig_callbacktouchMoved(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::touchPressed(OgreBites::TouchFingerEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbacktouchPressed) {
    return OgreBites::InputListener::touchPressed(evt);
  } else {
    jevt = (OgreBites::TouchFingerEvent *) &evt; 
    jresult = (unsigned int) swig_callbacktouchPressed(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::touchReleased(OgreBites::TouchFingerEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbacktouchReleased) {
    return OgreBites::InputListener::touchReleased(evt);
  } else {
    jevt = (OgreBites::TouchFingerEvent *) &evt; 
    jresult = (unsigned int) swig_callbacktouchReleased(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::mouseMoved(OgreBites::MouseMotionEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackmouseMoved) {
    return OgreBites::InputListener::mouseMoved(evt);
  } else {
    jevt = (OgreBites::MouseMotionEvent *) &evt; 
    jresult = (unsigned int) swig_callbackmouseMoved(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::mouseWheelRolled(OgreBites::MouseWheelEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackmouseWheelRolled) {
    return OgreBites::InputListener::mouseWheelRolled(evt);
  } else {
    jevt = (OgreBites::MouseWheelEvent *) &evt; 
    jresult = (unsigned int) swig_callbackmouseWheelRolled(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::mousePressed(OgreBites::MouseButtonEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackmousePressed) {
    return OgreBites::InputListener::mousePressed(evt);
  } else {
    jevt = (OgreBites::MouseButtonEvent *) &evt; 
    jresult = (unsigned int) swig_callbackmousePressed(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::mouseReleased(OgreBites::MouseButtonEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackmouseReleased) {
    return OgreBites::InputListener::mouseReleased(evt);
  } else {
    jevt = (OgreBites::MouseButtonEvent *) &evt; 
    jresult = (unsigned int) swig_callbackmouseReleased(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::textInput(OgreBites::TextInputEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbacktextInput) {
    return OgreBites::InputListener::textInput(evt);
  } else {
    jevt = (OgreBites::TextInputEvent *) &evt; 
    jresult = (unsigned int) swig_callbacktextInput(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::axisMoved(OgreBites::AxisEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackaxisMoved) {
    return OgreBites::InputListener::axisMoved(evt);
  } else {
    jevt = (OgreBites::AxisEvent *) &evt; 
    jresult = (unsigned int) swig_callbackaxisMoved(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::buttonPressed(OgreBites::ButtonEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackbuttonPressed) {
    return OgreBites::InputListener::buttonPressed(evt);
  } else {
    jevt = (OgreBites::ButtonEvent *) &evt; 
    jresult = (unsigned int) swig_callbackbuttonPressed(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_InputListener::buttonReleased(OgreBites::ButtonEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackbuttonReleased) {
    return OgreBites::InputListener::buttonReleased(evt);
  } else {
    jevt = (OgreBites::ButtonEvent *) &evt; 
    jresult = (unsigned int) swig_callbackbuttonReleased(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_InputListener::swig_connect_director(SWIG_Callback0_t callbackframeRendered, SWIG_Callback1_t callbackkeyPressed, SWIG_Callback2_t callbackkeyReleased, SWIG_Callback3_t callbacktouchMoved, SWIG_Callback4_t callbacktouchPressed, SWIG_Callback5_t callbacktouchReleased, SWIG_Callback6_t callbackmouseMoved, SWIG_Callback7_t callbackmouseWheelRolled, SWIG_Callback8_t callbackmousePressed, SWIG_Callback9_t callbackmouseReleased, SWIG_Callback10_t callbacktextInput, SWIG_Callback11_t callbackaxisMoved, SWIG_Callback12_t callbackbuttonPressed, SWIG_Callback13_t callbackbuttonReleased) {
  swig_callbackframeRendered = callbackframeRendered;
  swig_callbackkeyPressed = callbackkeyPressed;
  swig_callbackkeyReleased = callbackkeyReleased;
  swig_callbacktouchMoved = callbacktouchMoved;
  swig_callbacktouchPressed = callbacktouchPressed;
  swig_callbacktouchReleased = callbacktouchReleased;
  swig_callbackmouseMoved = callbackmouseMoved;
  swig_callbackmouseWheelRolled = callbackmouseWheelRolled;
  swig_callbackmousePressed = callbackmousePressed;
  swig_callbackmouseReleased = callbackmouseReleased;
  swig_callbacktextInput = callbacktextInput;
  swig_callbackaxisMoved = callbackaxisMoved;
  swig_callbackbuttonPressed = callbackbuttonPressed;
  swig_callbackbuttonReleased = callbackbuttonReleased;
}

void SwigDirector_InputListener::swig_init_callbacks() {
  swig_callbackframeRendered = 0;
  swig_callbackkeyPressed = 0;
  swig_callbackkeyReleased = 0;
  swig_callbacktouchMoved = 0;
  swig_callbacktouchPressed = 0;
  swig_callbacktouchReleased = 0;
  swig_callbackmouseMoved = 0;
  swig_callbackmouseWheelRolled = 0;
  swig_callbackmousePressed = 0;
  swig_callbackmouseReleased = 0;
  swig_callbacktextInput = 0;
  swig_callbackaxisMoved = 0;
  swig_callbackbuttonPressed = 0;
  swig_callbackbuttonReleased = 0;
}

SwigDirector_ApplicationContextBase::SwigDirector_ApplicationContextBase(Ogre::String const &appName) : OgreBites::ApplicationContextBase(appName), Swig::Director() {
  swig_init_callbacks();
}

bool SwigDirector_ApplicationContextBase::frameStarted(Ogre::FrameEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackframeStarted) {
    return OgreBites::ApplicationContextBase::frameStarted(evt);
  } else {
    jevt = (Ogre::FrameEvent *) &evt; 
    jresult = (unsigned int) swig_callbackframeStarted(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_ApplicationContextBase::frameRenderingQueued(Ogre::FrameEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackframeRenderingQueued) {
    return OgreBites::ApplicationContextBase::frameRenderingQueued(evt);
  } else {
    jevt = (Ogre::FrameEvent *) &evt; 
    jresult = (unsigned int) swig_callbackframeRenderingQueued(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_ApplicationContextBase::frameEnded(Ogre::FrameEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackframeEnded) {
    return OgreBites::ApplicationContextBase::frameEnded(evt);
  } else {
    jevt = (Ogre::FrameEvent *) &evt; 
    jresult = (unsigned int) swig_callbackframeEnded(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

SwigDirector_ApplicationContextBase::~SwigDirector_ApplicationContextBase() {
  
}


void SwigDirector_ApplicationContextBase::windowMoved(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowMoved) {
    OgreBites::ApplicationContextBase::windowMoved(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowMoved(jrw);
  }
}

void SwigDirector_ApplicationContextBase::windowResized(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowResized) {
    OgreBites::ApplicationContextBase::windowResized(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowResized(jrw);
  }
}

bool SwigDirector_ApplicationContextBase::windowClosing(Ogre::RenderWindow *rw) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jrw = 0 ;
  
  if (!swig_callbackwindowClosing) {
    return OgreBites::ApplicationContextBase::windowClosing(rw);
  } else {
    jrw = (void *) rw; 
    jresult = (unsigned int) swig_callbackwindowClosing(jrw);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_ApplicationContextBase::windowClosed(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowClosed) {
    OgreBites::ApplicationContextBase::windowClosed(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowClosed(jrw);
  }
}

void SwigDirector_ApplicationContextBase::windowFocusChange(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowFocusChange) {
    OgreBites::ApplicationContextBase::windowFocusChange(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowFocusChange(jrw);
  }
}

void SwigDirector_ApplicationContextBase::setup() {
  if (!swig_callbacksetup) {
    OgreBites::ApplicationContextBase::setup();
    return;
  } else {
    swig_callbacksetup();
  }
}

void SwigDirector_ApplicationContextBase::createRoot() {
  if (!swig_callbackcreateRoot) {
    OgreBites::ApplicationContextBase::createRoot();
    return;
  } else {
    swig_callbackcreateRoot();
  }
}

bool SwigDirector_ApplicationContextBase::oneTimeConfig() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackoneTimeConfig) {
    return OgreBites::ApplicationContextBase::oneTimeConfig();
  } else {
    jresult = (unsigned int) swig_callbackoneTimeConfig();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_ApplicationContextBase::setWindowGrab(OgreBites::NativeWindowType *win, bool grab) {
  void * jwin = 0 ;
  unsigned int jgrab  ;
  
  if (!swig_callbacksetWindowGrab__SWIG_0) {
    OgreBites::ApplicationContextBase::setWindowGrab(win,grab);
    return;
  } else {
    jwin = (void *) win; 
    jgrab = grab;
    swig_callbacksetWindowGrab__SWIG_0(jwin, jgrab);
  }
}

float SwigDirector_ApplicationContextBase::getDisplayDPI() const {
  float c_result = SwigValueInit< float >() ;
  float jresult = 0 ;
  
  if (!swig_callbackgetDisplayDPI) {
    return OgreBites::ApplicationContextBase::getDisplayDPI();
  } else {
    jresult = (float) swig_callbackgetDisplayDPI();
    c_result = (float)jresult; 
  }
  return c_result;
}

void SwigDirector_ApplicationContextBase::locateResources() {
  if (!swig_callbacklocateResources) {
    OgreBites::ApplicationContextBase::locateResources();
    return;
  } else {
    swig_callbacklocateResources();
  }
}

void SwigDirector_ApplicationContextBase::loadResources() {
  if (!swig_callbackloadResources) {
    OgreBites::ApplicationContextBase::loadResources();
    return;
  } else {
    swig_callbackloadResources();
  }
}

void SwigDirector_ApplicationContextBase::reconfigure(Ogre::String const &renderer, Ogre::NameValuePairList &options) {
  char * jrenderer = 0 ;
  void * joptions = 0 ;
  
  if (!swig_callbackreconfigure) {
    OgreBites::ApplicationContextBase::reconfigure(renderer,options);
    return;
  } else {
    jrenderer = SWIG_csharp_string_callback((&renderer)->c_str()); 
    joptions = (Ogre::NameValuePairList *) &options; 
    swig_callbackreconfigure(jrenderer, joptions);
  }
}

void SwigDirector_ApplicationContextBase::shutdown() {
  if (!swig_callbackshutdown) {
    OgreBites::ApplicationContextBase::shutdown();
    return;
  } else {
    swig_callbackshutdown();
  }
}

void SwigDirector_ApplicationContextBase::pollEvents() {
  if (!swig_callbackpollEvents) {
    OgreBites::ApplicationContextBase::pollEvents();
    return;
  } else {
    swig_callbackpollEvents();
  }
}

void SwigDirector_ApplicationContextBase::addInputListener(OgreBites::NativeWindowType *win, OgreBites::InputListener *lis) {
  void * jwin = 0 ;
  void * jlis = 0 ;
  
  if (!swig_callbackaddInputListener__SWIG_0) {
    OgreBites::ApplicationContextBase::addInputListener(win,lis);
    return;
  } else {
    jwin = (void *) win; 
    jlis = (void *) lis; 
    swig_callbackaddInputListener__SWIG_0(jwin, jlis);
  }
}

void SwigDirector_ApplicationContextBase::removeInputListener(OgreBites::NativeWindowType *win, OgreBites::InputListener *lis) {
  void * jwin = 0 ;
  void * jlis = 0 ;
  
  if (!swig_callbackremoveInputListener__SWIG_0) {
    OgreBites::ApplicationContextBase::removeInputListener(win,lis);
    return;
  } else {
    jwin = (void *) win; 
    jlis = (void *) lis; 
    swig_callbackremoveInputListener__SWIG_0(jwin, jlis);
  }
}

OgreBites::NativeWindowPair SwigDirector_ApplicationContextBase::createWindow(Ogre::String const &name, uint32_t w, uint32_t h, Ogre::NameValuePairList miscParams) {
  OgreBites::NativeWindowPair c_result ;
  void * jresult = 0 ;
  char * jname = 0 ;
  unsigned int jw  ;
  unsigned int jh  ;
  void * jmiscParams  ;
  
  if (!swig_callbackcreateWindow__SWIG_0) {
    return OgreBites::ApplicationContextBase::createWindow(name,w,h,miscParams);
  } else {
    jname = SWIG_csharp_string_callback((&name)->c_str()); 
    jw = w;
    jh = h;
    jmiscParams = (void *)new Ogre::NameValuePairList((const Ogre::NameValuePairList &)miscParams); 
    jresult = (void *) swig_callbackcreateWindow__SWIG_0(jname, jw, jh, jmiscParams);
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Unexpected null return for type OgreBites::NativeWindowPair", 0);
      return c_result;
    }
    c_result = *(OgreBites::NativeWindowPair *)jresult; 
  }
  return c_result;
}

void SwigDirector_ApplicationContextBase::_destroyWindow(OgreBites::NativeWindowPair const &win) {
  void * jwin = 0 ;
  
  if (!swig_callback_destroyWindow) {
    OgreBites::ApplicationContextBase::_destroyWindow(win);
    return;
  } else {
    jwin = (OgreBites::NativeWindowPair *) &win; 
    swig_callback_destroyWindow(jwin);
  }
}

void SwigDirector_ApplicationContextBase::swig_connect_director(SWIG_Callback0_t callbackframeStarted, SWIG_Callback1_t callbackframeRenderingQueued, SWIG_Callback2_t callbackframeEnded, SWIG_Callback3_t callbackwindowMoved, SWIG_Callback4_t callbackwindowResized, SWIG_Callback5_t callbackwindowClosing, SWIG_Callback6_t callbackwindowClosed, SWIG_Callback7_t callbackwindowFocusChange, SWIG_Callback8_t callbacksetup, SWIG_Callback9_t callbackcreateRoot, SWIG_Callback10_t callbackoneTimeConfig, SWIG_Callback11_t callbacksetWindowGrab__SWIG_0, SWIG_Callback12_t callbacksetWindowGrab__SWIG_1, SWIG_Callback13_t callbackgetDisplayDPI, SWIG_Callback14_t callbacklocateResources, SWIG_Callback15_t callbackloadResources, SWIG_Callback16_t callbackreconfigure, SWIG_Callback17_t callbackshutdown, SWIG_Callback18_t callbackpollEvents, SWIG_Callback19_t callbackaddInputListener__SWIG_0, SWIG_Callback20_t callbackremoveInputListener__SWIG_0, SWIG_Callback21_t callbackcreateWindow__SWIG_0, SWIG_Callback22_t callbackcreateWindow__SWIG_1, SWIG_Callback23_t callbackcreateWindow__SWIG_2, SWIG_Callback24_t callbackcreateWindow__SWIG_3, SWIG_Callback25_t callback_destroyWindow) {
  swig_callbackframeStarted = callbackframeStarted;
  swig_callbackframeRenderingQueued = callbackframeRenderingQueued;
  swig_callbackframeEnded = callbackframeEnded;
  swig_callbackwindowMoved = callbackwindowMoved;
  swig_callbackwindowResized = callbackwindowResized;
  swig_callbackwindowClosing = callbackwindowClosing;
  swig_callbackwindowClosed = callbackwindowClosed;
  swig_callbackwindowFocusChange = callbackwindowFocusChange;
  swig_callbacksetup = callbacksetup;
  swig_callbackcreateRoot = callbackcreateRoot;
  swig_callbackoneTimeConfig = callbackoneTimeConfig;
  swig_callbacksetWindowGrab__SWIG_0 = callbacksetWindowGrab__SWIG_0;
  swig_callbacksetWindowGrab__SWIG_1 = callbacksetWindowGrab__SWIG_1;
  swig_callbackgetDisplayDPI = callbackgetDisplayDPI;
  swig_callbacklocateResources = callbacklocateResources;
  swig_callbackloadResources = callbackloadResources;
  swig_callbackreconfigure = callbackreconfigure;
  swig_callbackshutdown = callbackshutdown;
  swig_callbackpollEvents = callbackpollEvents;
  swig_callbackaddInputListener__SWIG_0 = callbackaddInputListener__SWIG_0;
  swig_callbackremoveInputListener__SWIG_0 = callbackremoveInputListener__SWIG_0;
  swig_callbackcreateWindow__SWIG_0 = callbackcreateWindow__SWIG_0;
  swig_callbackcreateWindow__SWIG_1 = callbackcreateWindow__SWIG_1;
  swig_callbackcreateWindow__SWIG_2 = callbackcreateWindow__SWIG_2;
  swig_callbackcreateWindow__SWIG_3 = callbackcreateWindow__SWIG_3;
  swig_callback_destroyWindow = callback_destroyWindow;
}

void SwigDirector_ApplicationContextBase::swig_init_callbacks() {
  swig_callbackframeStarted = 0;
  swig_callbackframeRenderingQueued = 0;
  swig_callbackframeEnded = 0;
  swig_callbackwindowMoved = 0;
  swig_callbackwindowResized = 0;
  swig_callbackwindowClosing = 0;
  swig_callbackwindowClosed = 0;
  swig_callbackwindowFocusChange = 0;
  swig_callbacksetup = 0;
  swig_callbackcreateRoot = 0;
  swig_callbackoneTimeConfig = 0;
  swig_callbacksetWindowGrab__SWIG_0 = 0;
  swig_callbacksetWindowGrab__SWIG_1 = 0;
  swig_callbackgetDisplayDPI = 0;
  swig_callbacklocateResources = 0;
  swig_callbackloadResources = 0;
  swig_callbackreconfigure = 0;
  swig_callbackshutdown = 0;
  swig_callbackpollEvents = 0;
  swig_callbackaddInputListener__SWIG_0 = 0;
  swig_callbackremoveInputListener__SWIG_0 = 0;
  swig_callbackcreateWindow__SWIG_0 = 0;
  swig_callbackcreateWindow__SWIG_1 = 0;
  swig_callbackcreateWindow__SWIG_2 = 0;
  swig_callbackcreateWindow__SWIG_3 = 0;
  swig_callback_destroyWindow = 0;
}

SwigDirector_ApplicationContext::SwigDirector_ApplicationContext(Ogre::String const &appName) : OgreBites::ApplicationContextSDL(appName), Swig::Director() {
  swig_init_callbacks();
}

bool SwigDirector_ApplicationContext::frameStarted(Ogre::FrameEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackframeStarted) {
    return OgreBites::ApplicationContextBase::frameStarted(evt);
  } else {
    jevt = (Ogre::FrameEvent *) &evt; 
    jresult = (unsigned int) swig_callbackframeStarted(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_ApplicationContext::frameRenderingQueued(Ogre::FrameEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackframeRenderingQueued) {
    return OgreBites::ApplicationContextBase::frameRenderingQueued(evt);
  } else {
    jevt = (Ogre::FrameEvent *) &evt; 
    jresult = (unsigned int) swig_callbackframeRenderingQueued(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_ApplicationContext::frameEnded(Ogre::FrameEvent const &evt) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jevt = 0 ;
  
  if (!swig_callbackframeEnded) {
    return OgreBites::ApplicationContextBase::frameEnded(evt);
  } else {
    jevt = (Ogre::FrameEvent *) &evt; 
    jresult = (unsigned int) swig_callbackframeEnded(jevt);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

SwigDirector_ApplicationContext::~SwigDirector_ApplicationContext() {
  
}


void SwigDirector_ApplicationContext::windowMoved(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowMoved) {
    OgreBites::ApplicationContextBase::windowMoved(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowMoved(jrw);
  }
}

void SwigDirector_ApplicationContext::windowResized(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowResized) {
    OgreBites::ApplicationContextBase::windowResized(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowResized(jrw);
  }
}

bool SwigDirector_ApplicationContext::windowClosing(Ogre::RenderWindow *rw) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jrw = 0 ;
  
  if (!swig_callbackwindowClosing) {
    return OgreBites::ApplicationContextBase::windowClosing(rw);
  } else {
    jrw = (void *) rw; 
    jresult = (unsigned int) swig_callbackwindowClosing(jrw);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_ApplicationContext::windowClosed(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowClosed) {
    OgreBites::ApplicationContextBase::windowClosed(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowClosed(jrw);
  }
}

void SwigDirector_ApplicationContext::windowFocusChange(Ogre::RenderWindow *rw) {
  void * jrw = 0 ;
  
  if (!swig_callbackwindowFocusChange) {
    OgreBites::ApplicationContextBase::windowFocusChange(rw);
    return;
  } else {
    jrw = (void *) rw; 
    swig_callbackwindowFocusChange(jrw);
  }
}

void SwigDirector_ApplicationContext::setup() {
  if (!swig_callbacksetup) {
    OgreBites::ApplicationContextBase::setup();
    return;
  } else {
    swig_callbacksetup();
  }
}

void SwigDirector_ApplicationContext::createRoot() {
  if (!swig_callbackcreateRoot) {
    OgreBites::ApplicationContextBase::createRoot();
    return;
  } else {
    swig_callbackcreateRoot();
  }
}

bool SwigDirector_ApplicationContext::oneTimeConfig() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackoneTimeConfig) {
    return OgreBites::ApplicationContextBase::oneTimeConfig();
  } else {
    jresult = (unsigned int) swig_callbackoneTimeConfig();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_ApplicationContext::setWindowGrab(OgreBites::NativeWindowType *win, bool grab) {
  void * jwin = 0 ;
  unsigned int jgrab  ;
  
  if (!swig_callbacksetWindowGrab__SWIG_0) {
    OgreBites::ApplicationContextSDL::setWindowGrab(win,grab);
    return;
  } else {
    jwin = (void *) win; 
    jgrab = grab;
    swig_callbacksetWindowGrab__SWIG_0(jwin, jgrab);
  }
}

void SwigDirector_ApplicationContext::setWindowGrab(OgreBites::NativeWindowType *win) {
  void * jwin = 0 ;
  
  if (!swig_callbacksetWindowGrab__SWIG_1_0) {
    OgreBites::ApplicationContextSDL::setWindowGrab(win);
    return;
  } else {
    jwin = (void *) win; 
    swig_callbacksetWindowGrab__SWIG_1_0(jwin);
  }
}

float SwigDirector_ApplicationContext::getDisplayDPI() const {
  float c_result = SwigValueInit< float >() ;
  float jresult = 0 ;
  
  if (!swig_callbackgetDisplayDPI) {
    return OgreBites::ApplicationContextSDL::getDisplayDPI();
  } else {
    jresult = (float) swig_callbackgetDisplayDPI();
    c_result = (float)jresult; 
  }
  return c_result;
}

void SwigDirector_ApplicationContext::locateResources() {
  if (!swig_callbacklocateResources) {
    OgreBites::ApplicationContextBase::locateResources();
    return;
  } else {
    swig_callbacklocateResources();
  }
}

void SwigDirector_ApplicationContext::loadResources() {
  if (!swig_callbackloadResources) {
    OgreBites::ApplicationContextBase::loadResources();
    return;
  } else {
    swig_callbackloadResources();
  }
}

void SwigDirector_ApplicationContext::reconfigure(Ogre::String const &renderer, Ogre::NameValuePairList &options) {
  char * jrenderer = 0 ;
  void * joptions = 0 ;
  
  if (!swig_callbackreconfigure) {
    OgreBites::ApplicationContextBase::reconfigure(renderer,options);
    return;
  } else {
    jrenderer = SWIG_csharp_string_callback((&renderer)->c_str()); 
    joptions = (Ogre::NameValuePairList *) &options; 
    swig_callbackreconfigure(jrenderer, joptions);
  }
}

void SwigDirector_ApplicationContext::shutdown() {
  if (!swig_callbackshutdown) {
    OgreBites::ApplicationContextSDL::shutdown();
    return;
  } else {
    swig_callbackshutdown();
  }
}

void SwigDirector_ApplicationContext::pollEvents() {
  if (!swig_callbackpollEvents) {
    OgreBites::ApplicationContextSDL::pollEvents();
    return;
  } else {
    swig_callbackpollEvents();
  }
}

void SwigDirector_ApplicationContext::addInputListener(OgreBites::NativeWindowType *win, OgreBites::InputListener *lis) {
  void * jwin = 0 ;
  void * jlis = 0 ;
  
  if (!swig_callbackaddInputListener__SWIG_0) {
    OgreBites::ApplicationContextSDL::addInputListener(win,lis);
    return;
  } else {
    jwin = (void *) win; 
    jlis = (void *) lis; 
    swig_callbackaddInputListener__SWIG_0(jwin, jlis);
  }
}

void SwigDirector_ApplicationContext::removeInputListener(OgreBites::NativeWindowType *win, OgreBites::InputListener *lis) {
  void * jwin = 0 ;
  void * jlis = 0 ;
  
  if (!swig_callbackremoveInputListener__SWIG_0) {
    OgreBites::ApplicationContextSDL::removeInputListener(win,lis);
    return;
  } else {
    jwin = (void *) win; 
    jlis = (void *) lis; 
    swig_callbackremoveInputListener__SWIG_0(jwin, jlis);
  }
}

OgreBites::NativeWindowPair SwigDirector_ApplicationContext::createWindow(Ogre::String const &name, uint32_t w, uint32_t h, Ogre::NameValuePairList miscParams) {
  OgreBites::NativeWindowPair c_result ;
  void * jresult = 0 ;
  char * jname = 0 ;
  unsigned int jw  ;
  unsigned int jh  ;
  void * jmiscParams  ;
  
  if (!swig_callbackcreateWindow__SWIG_0) {
    return OgreBites::ApplicationContextSDL::createWindow(name,w,h,miscParams);
  } else {
    jname = SWIG_csharp_string_callback((&name)->c_str()); 
    jw = w;
    jh = h;
    jmiscParams = (void *)new Ogre::NameValuePairList((const Ogre::NameValuePairList &)miscParams); 
    jresult = (void *) swig_callbackcreateWindow__SWIG_0(jname, jw, jh, jmiscParams);
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Unexpected null return for type OgreBites::NativeWindowPair", 0);
      return c_result;
    }
    c_result = *(OgreBites::NativeWindowPair *)jresult; 
  }
  return c_result;
}

void SwigDirector_ApplicationContext::_destroyWindow(OgreBites::NativeWindowPair const &win) {
  void * jwin = 0 ;
  
  if (!swig_callback_destroyWindow) {
    OgreBites::ApplicationContextSDL::_destroyWindow(win);
    return;
  } else {
    jwin = (OgreBites::NativeWindowPair *) &win; 
    swig_callback_destroyWindow(jwin);
  }
}

void SwigDirector_ApplicationContext::swig_connect_director(SWIG_Callback0_t callbackframeStarted, SWIG_Callback1_t callbackframeRenderingQueued, SWIG_Callback2_t callbackframeEnded, SWIG_Callback3_t callbackwindowMoved, SWIG_Callback4_t callbackwindowResized, SWIG_Callback5_t callbackwindowClosing, SWIG_Callback6_t callbackwindowClosed, SWIG_Callback7_t callbackwindowFocusChange, SWIG_Callback8_t callbacksetup, SWIG_Callback9_t callbackcreateRoot, SWIG_Callback10_t callbackoneTimeConfig, SWIG_Callback11_t callbacksetWindowGrab__SWIG_0, SWIG_Callback12_t callbacksetWindowGrab__SWIG_1_0, SWIG_Callback13_t callbackgetDisplayDPI, SWIG_Callback14_t callbacklocateResources, SWIG_Callback15_t callbackloadResources, SWIG_Callback16_t callbackreconfigure, SWIG_Callback17_t callbackshutdown, SWIG_Callback18_t callbackpollEvents, SWIG_Callback19_t callbackaddInputListener__SWIG_0, SWIG_Callback20_t callbackremoveInputListener__SWIG_0, SWIG_Callback21_t callbackcreateWindow__SWIG_0, SWIG_Callback22_t callbackcreateWindow__SWIG_1, SWIG_Callback23_t callbackcreateWindow__SWIG_2, SWIG_Callback24_t callbackcreateWindow__SWIG_3, SWIG_Callback25_t callback_destroyWindow) {
  swig_callbackframeStarted = callbackframeStarted;
  swig_callbackframeRenderingQueued = callbackframeRenderingQueued;
  swig_callbackframeEnded = callbackframeEnded;
  swig_callbackwindowMoved = callbackwindowMoved;
  swig_callbackwindowResized = callbackwindowResized;
  swig_callbackwindowClosing = callbackwindowClosing;
  swig_callbackwindowClosed = callbackwindowClosed;
  swig_callbackwindowFocusChange = callbackwindowFocusChange;
  swig_callbacksetup = callbacksetup;
  swig_callbackcreateRoot = callbackcreateRoot;
  swig_callbackoneTimeConfig = callbackoneTimeConfig;
  swig_callbacksetWindowGrab__SWIG_0 = callbacksetWindowGrab__SWIG_0;
  swig_callbacksetWindowGrab__SWIG_1_0 = callbacksetWindowGrab__SWIG_1_0;
  swig_callbackgetDisplayDPI = callbackgetDisplayDPI;
  swig_callbacklocateResources = callbacklocateResources;
  swig_callbackloadResources = callbackloadResources;
  swig_callbackreconfigure = callbackreconfigure;
  swig_callbackshutdown = callbackshutdown;
  swig_callbackpollEvents = callbackpollEvents;
  swig_callbackaddInputListener__SWIG_0 = callbackaddInputListener__SWIG_0;
  swig_callbackremoveInputListener__SWIG_0 = callbackremoveInputListener__SWIG_0;
  swig_callbackcreateWindow__SWIG_0 = callbackcreateWindow__SWIG_0;
  swig_callbackcreateWindow__SWIG_1 = callbackcreateWindow__SWIG_1;
  swig_callbackcreateWindow__SWIG_2 = callbackcreateWindow__SWIG_2;
  swig_callbackcreateWindow__SWIG_3 = callbackcreateWindow__SWIG_3;
  swig_callback_destroyWindow = callback_destroyWindow;
}

void SwigDirector_ApplicationContext::swig_init_callbacks() {
  swig_callbackframeStarted = 0;
  swig_callbackframeRenderingQueued = 0;
  swig_callbackframeEnded = 0;
  swig_callbackwindowMoved = 0;
  swig_callbackwindowResized = 0;
  swig_callbackwindowClosing = 0;
  swig_callbackwindowClosed = 0;
  swig_callbackwindowFocusChange = 0;
  swig_callbacksetup = 0;
  swig_callbackcreateRoot = 0;
  swig_callbackoneTimeConfig = 0;
  swig_callbacksetWindowGrab__SWIG_0 = 0;
  swig_callbacksetWindowGrab__SWIG_1_0 = 0;
  swig_callbackgetDisplayDPI = 0;
  swig_callbacklocateResources = 0;
  swig_callbackloadResources = 0;
  swig_callbackreconfigure = 0;
  swig_callbackshutdown = 0;
  swig_callbackpollEvents = 0;
  swig_callbackaddInputListener__SWIG_0 = 0;
  swig_callbackremoveInputListener__SWIG_0 = 0;
  swig_callbackcreateWindow__SWIG_0 = 0;
  swig_callbackcreateWindow__SWIG_1 = 0;
  swig_callbackcreateWindow__SWIG_2 = 0;
  swig_callbackcreateWindow__SWIG_3 = 0;
  swig_callback_destroyWindow = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_SGTechniqueResolverListener___(void * jarg1) {
  void * jresult ;
  Ogre::RTShader::ShaderGenerator *arg1 = (Ogre::RTShader::ShaderGenerator *) 0 ;
  OgreBites::SGTechniqueResolverListener *result = 0 ;
  
  arg1 = (Ogre::RTShader::ShaderGenerator *)jarg1; 
  {
    try {
      result = (OgreBites::SGTechniqueResolverListener *)new OgreBites::SGTechniqueResolverListener(arg1);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_SGTechniqueResolverListener_handleSchemeNotFound___(void * jarg1, unsigned short jarg2, char * jarg3, void * jarg4, unsigned short jarg5, void * jarg6) {
  void * jresult ;
  OgreBites::SGTechniqueResolverListener *arg1 = (OgreBites::SGTechniqueResolverListener *) 0 ;
  unsigned short arg2 ;
  Ogre::String *arg3 = 0 ;
  Ogre::Material *arg4 = (Ogre::Material *) 0 ;
  unsigned short arg5 ;
  Ogre::Renderable *arg6 = (Ogre::Renderable *) 0 ;
  Ogre::Technique *result = 0 ;
  
  arg1 = (OgreBites::SGTechniqueResolverListener *)jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (Ogre::Material *)jarg4; 
  arg5 = (unsigned short)jarg5; 
  arg6 = (Ogre::Renderable *)jarg6; 
  {
    try {
      result = (Ogre::Technique *)(arg1)->handleSchemeNotFound(arg2,(Ogre::String const &)*arg3,arg4,arg5,(Ogre::Renderable const *)arg6);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_SGTechniqueResolverListener_afterIlluminationPassesCreated___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::SGTechniqueResolverListener *arg1 = (OgreBites::SGTechniqueResolverListener *) 0 ;
  Ogre::Technique *arg2 = (Ogre::Technique *) 0 ;
  bool result;
  
  arg1 = (OgreBites::SGTechniqueResolverListener *)jarg1; 
  arg2 = (Ogre::Technique *)jarg2; 
  {
    try {
      result = (bool)(arg1)->afterIlluminationPassesCreated(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_SGTechniqueResolverListener_beforeIlluminationPassesCleared___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::SGTechniqueResolverListener *arg1 = (OgreBites::SGTechniqueResolverListener *) 0 ;
  Ogre::Technique *arg2 = (Ogre::Technique *) 0 ;
  bool result;
  
  arg1 = (OgreBites::SGTechniqueResolverListener *)jarg1; 
  arg2 = (Ogre::Technique *)jarg2; 
  {
    try {
      result = (bool)(arg1)->beforeIlluminationPassesCleared(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_SGTechniqueResolverListener___(void * jarg1) {
  OgreBites::SGTechniqueResolverListener *arg1 = (OgreBites::SGTechniqueResolverListener *) 0 ;
  
  arg1 = (OgreBites::SGTechniqueResolverListener *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_Clear___(void * jarg1) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  {
    try {
      (arg1)->clear();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_Add___(void * jarg1, void * jarg2) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  OgreBites::InputListener **arg2 = 0 ;
  OgreBites::InputListener *temp2 = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  temp2 = (OgreBites::InputListener *)jarg2;
  arg2 = (OgreBites::InputListener **)&temp2; 
  {
    try {
      (arg1)->push_back((OgreBites::InputListener *const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_orgfogre_InputListenerList_size___(void * jarg1) {
  unsigned long jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  std::vector< OgreBites::InputListener * >::size_type result;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  {
    try {
      result = ((std::vector< OgreBites::InputListener * > const *)arg1)->size();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_orgfogre_InputListenerList_capacity___(void * jarg1) {
  unsigned long jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  std::vector< OgreBites::InputListener * >::size_type result;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  {
    try {
      result = ((std::vector< OgreBites::InputListener * > const *)arg1)->capacity();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_reserve___(void * jarg1, unsigned long jarg2) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  std::vector< OgreBites::InputListener * >::size_type arg2 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (std::vector< OgreBites::InputListener * >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_InputListenerList__SWIG_0___() {
  void * jresult ;
  std::vector< OgreBites::InputListener * > *result = 0 ;
  
  {
    try {
      result = (std::vector< OgreBites::InputListener * > *)new std::vector< OgreBites::InputListener * >();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_InputListenerList__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = 0 ;
  std::vector< OgreBites::InputListener * > *result = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< OgreBites::InputListener * > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< OgreBites::InputListener * > *)new std::vector< OgreBites::InputListener * >((std::vector< OgreBites::InputListener * > const &)*arg1);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_InputListenerList__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< OgreBites::InputListener * > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< OgreBites::InputListener * > *)new_std_vector_Sl_OgreBites_InputListener_Sm__Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_InputListenerList_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  OgreBites::InputListener *result = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (OgreBites::InputListener *)std_vector_Sl_OgreBites_InputListener_Sm__Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_InputListenerList_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  std::vector< OgreBites::InputListener * >::value_type *result = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< OgreBites::InputListener * >::value_type *) &std_vector_Sl_OgreBites_InputListener_Sm__Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)*result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  OgreBites::InputListener **arg3 = 0 ;
  OgreBites::InputListener *temp3 = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (OgreBites::InputListener *)jarg3;
  arg3 = (OgreBites::InputListener **)&temp3; 
  {
    try {
      try {
        std_vector_Sl_OgreBites_InputListener_Sm__Sg__setitem(arg1,arg2,(OgreBites::InputListener *const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_AddRange___(void * jarg1, void * jarg2) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  std::vector< OgreBites::InputListener * > *arg2 = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (std::vector< OgreBites::InputListener * > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< OgreBites::InputListener * > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_OgreBites_InputListener_Sm__Sg__AddRange(arg1,(std::vector< OgreBites::InputListener * > const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_InputListenerList_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< OgreBites::InputListener * > *result = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< OgreBites::InputListener * > *)std_vector_Sl_OgreBites_InputListener_Sm__Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  OgreBites::InputListener **arg3 = 0 ;
  OgreBites::InputListener *temp3 = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (OgreBites::InputListener *)jarg3;
  arg3 = (OgreBites::InputListener **)&temp3; 
  {
    try {
      try {
        std_vector_Sl_OgreBites_InputListener_Sm__Sg__Insert(arg1,arg2,(OgreBites::InputListener *const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  std::vector< OgreBites::InputListener * > *arg3 = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< OgreBites::InputListener * > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< OgreBites::InputListener * > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_OgreBites_InputListener_Sm__Sg__InsertRange(arg1,arg2,(std::vector< OgreBites::InputListener * > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_OgreBites_InputListener_Sm__Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_OgreBites_InputListener_Sm__Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_InputListenerList_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  OgreBites::InputListener **arg1 = 0 ;
  int arg2 ;
  OgreBites::InputListener *temp1 = 0 ;
  std::vector< OgreBites::InputListener * > *result = 0 ;
  
  temp1 = (OgreBites::InputListener *)jarg1;
  arg1 = (OgreBites::InputListener **)&temp1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< OgreBites::InputListener * > *)std_vector_Sl_OgreBites_InputListener_Sm__Sg__Repeat((OgreBites::InputListener *const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_Reverse__SWIG_0___(void * jarg1) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  {
    try {
      std_vector_Sl_OgreBites_InputListener_Sm__Sg__Reverse__SWIG_0(arg1);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_OgreBites_InputListener_Sm__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListenerList_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  int arg2 ;
  std::vector< OgreBites::InputListener * > *arg3 = 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< OgreBites::InputListener * > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< OgreBites::InputListener * > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_OgreBites_InputListener_Sm__Sg__SetRange(arg1,arg2,(std::vector< OgreBites::InputListener * > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerList_Contains___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  OgreBites::InputListener **arg2 = 0 ;
  OgreBites::InputListener *temp2 = 0 ;
  bool result;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  temp2 = (OgreBites::InputListener *)jarg2;
  arg2 = (OgreBites::InputListener **)&temp2; 
  {
    try {
      result = (bool)std_vector_Sl_OgreBites_InputListener_Sm__Sg__Contains(arg1,(OgreBites::InputListener *const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_InputListenerList_IndexOf___(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  OgreBites::InputListener **arg2 = 0 ;
  OgreBites::InputListener *temp2 = 0 ;
  int result;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  temp2 = (OgreBites::InputListener *)jarg2;
  arg2 = (OgreBites::InputListener **)&temp2; 
  {
    try {
      result = (int)std_vector_Sl_OgreBites_InputListener_Sm__Sg__IndexOf(arg1,(OgreBites::InputListener *const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_InputListenerList_LastIndexOf___(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  OgreBites::InputListener **arg2 = 0 ;
  OgreBites::InputListener *temp2 = 0 ;
  int result;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  temp2 = (OgreBites::InputListener *)jarg2;
  arg2 = (OgreBites::InputListener **)&temp2; 
  {
    try {
      result = (int)std_vector_Sl_OgreBites_InputListener_Sm__Sg__LastIndexOf(arg1,(OgreBites::InputListener *const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerList_Remove___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  OgreBites::InputListener **arg2 = 0 ;
  OgreBites::InputListener *temp2 = 0 ;
  bool result;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  temp2 = (OgreBites::InputListener *)jarg2;
  arg2 = (OgreBites::InputListener **)&temp2; 
  {
    try {
      result = (bool)std_vector_Sl_OgreBites_InputListener_Sm__Sg__Remove(arg1,(OgreBites::InputListener *const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_InputListenerList___(void * jarg1) {
  std::vector< OgreBites::InputListener * > *arg1 = (std::vector< OgreBites::InputListener * > *) 0 ;
  
  arg1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Keysym_sym_set___(void * jarg1, int jarg2) {
  OgreBites::Keysym *arg1 = (OgreBites::Keysym *) 0 ;
  OgreBites::Keycode arg2 ;
  
  arg1 = (OgreBites::Keysym *)jarg1; 
  arg2 = (OgreBites::Keycode)jarg2; 
  if (arg1) (arg1)->sym = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_Keysym_sym_get___(void * jarg1) {
  int jresult ;
  OgreBites::Keysym *arg1 = (OgreBites::Keysym *) 0 ;
  OgreBites::Keycode result;
  
  arg1 = (OgreBites::Keysym *)jarg1; 
  result = (OgreBites::Keycode) ((arg1)->sym);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Keysym_mod_set___(void * jarg1, unsigned short jarg2) {
  OgreBites::Keysym *arg1 = (OgreBites::Keysym *) 0 ;
  unsigned short arg2 ;
  
  arg1 = (OgreBites::Keysym *)jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->mod = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_orgfogre_Keysym_mod_get___(void * jarg1) {
  unsigned short jresult ;
  OgreBites::Keysym *arg1 = (OgreBites::Keysym *) 0 ;
  unsigned short result;
  
  arg1 = (OgreBites::Keysym *)jarg1; 
  result = (unsigned short) ((arg1)->mod);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_Keysym___() {
  void * jresult ;
  OgreBites::Keysym *result = 0 ;
  
  {
    try {
      result = (OgreBites::Keysym *)new OgreBites::Keysym();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_Keysym___(void * jarg1) {
  OgreBites::Keysym *arg1 = (OgreBites::Keysym *) 0 ;
  
  arg1 = (OgreBites::Keysym *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_KeyboardEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::KeyboardEvent *arg1 = (OgreBites::KeyboardEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::KeyboardEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_KeyboardEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::KeyboardEvent *arg1 = (OgreBites::KeyboardEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::KeyboardEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_KeyboardEvent_keysym_set___(void * jarg1, void * jarg2) {
  OgreBites::KeyboardEvent *arg1 = (OgreBites::KeyboardEvent *) 0 ;
  OgreBites::Keysym *arg2 = (OgreBites::Keysym *) 0 ;
  
  arg1 = (OgreBites::KeyboardEvent *)jarg1; 
  arg2 = (OgreBites::Keysym *)jarg2; 
  if (arg1) (arg1)->keysym = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_KeyboardEvent_keysym_get___(void * jarg1) {
  void * jresult ;
  OgreBites::KeyboardEvent *arg1 = (OgreBites::KeyboardEvent *) 0 ;
  OgreBites::Keysym *result = 0 ;
  
  arg1 = (OgreBites::KeyboardEvent *)jarg1; 
  result = (OgreBites::Keysym *)& ((arg1)->keysym);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_KeyboardEvent_repeat_set___(void * jarg1, unsigned char jarg2) {
  OgreBites::KeyboardEvent *arg1 = (OgreBites::KeyboardEvent *) 0 ;
  unsigned char arg2 ;
  
  arg1 = (OgreBites::KeyboardEvent *)jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->repeat = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_orgfogre_KeyboardEvent_repeat_get___(void * jarg1) {
  unsigned char jresult ;
  OgreBites::KeyboardEvent *arg1 = (OgreBites::KeyboardEvent *) 0 ;
  unsigned char result;
  
  arg1 = (OgreBites::KeyboardEvent *)jarg1; 
  result = (unsigned char) ((arg1)->repeat);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_KeyboardEvent___() {
  void * jresult ;
  OgreBites::KeyboardEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::KeyboardEvent *)new OgreBites::KeyboardEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_KeyboardEvent___(void * jarg1) {
  OgreBites::KeyboardEvent *arg1 = (OgreBites::KeyboardEvent *) 0 ;
  
  arg1 = (OgreBites::KeyboardEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_x_set___(void * jarg1, int jarg2) {
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_x_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_y_set___(void * jarg1, int jarg2) {
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_y_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_xrel_set___(void * jarg1, int jarg2) {
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->xrel = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_xrel_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  result = (int) ((arg1)->xrel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_yrel_set___(void * jarg1, int jarg2) {
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->yrel = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_yrel_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  result = (int) ((arg1)->yrel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_windowID_set___(void * jarg1, int jarg2) {
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->windowID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseMotionEvent_windowID_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  result = (int) ((arg1)->windowID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_MouseMotionEvent___() {
  void * jresult ;
  OgreBites::MouseMotionEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::MouseMotionEvent *)new OgreBites::MouseMotionEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_MouseMotionEvent___(void * jarg1) {
  OgreBites::MouseMotionEvent *arg1 = (OgreBites::MouseMotionEvent *) 0 ;
  
  arg1 = (OgreBites::MouseMotionEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_x_set___(void * jarg1, int jarg2) {
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_x_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_y_set___(void * jarg1, int jarg2) {
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_y_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_button_set___(void * jarg1, unsigned char jarg2) {
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  unsigned char arg2 ;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->button = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_button_get___(void * jarg1) {
  unsigned char jresult ;
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  unsigned char result;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  result = (unsigned char) ((arg1)->button);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_clicks_set___(void * jarg1, unsigned char jarg2) {
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  unsigned char arg2 ;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->clicks = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_orgfogre_MouseButtonEvent_clicks_get___(void * jarg1) {
  unsigned char jresult ;
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  unsigned char result;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  result = (unsigned char) ((arg1)->clicks);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_MouseButtonEvent___() {
  void * jresult ;
  OgreBites::MouseButtonEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::MouseButtonEvent *)new OgreBites::MouseButtonEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_MouseButtonEvent___(void * jarg1) {
  OgreBites::MouseButtonEvent *arg1 = (OgreBites::MouseButtonEvent *) 0 ;
  
  arg1 = (OgreBites::MouseButtonEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseWheelEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::MouseWheelEvent *arg1 = (OgreBites::MouseWheelEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseWheelEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseWheelEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseWheelEvent *arg1 = (OgreBites::MouseWheelEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseWheelEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_MouseWheelEvent_y_set___(void * jarg1, int jarg2) {
  OgreBites::MouseWheelEvent *arg1 = (OgreBites::MouseWheelEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::MouseWheelEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_MouseWheelEvent_y_get___(void * jarg1) {
  int jresult ;
  OgreBites::MouseWheelEvent *arg1 = (OgreBites::MouseWheelEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::MouseWheelEvent *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_MouseWheelEvent___() {
  void * jresult ;
  OgreBites::MouseWheelEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::MouseWheelEvent *)new OgreBites::MouseWheelEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_MouseWheelEvent___(void * jarg1) {
  OgreBites::MouseWheelEvent *arg1 = (OgreBites::MouseWheelEvent *) 0 ;
  
  arg1 = (OgreBites::MouseWheelEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_fingerId_set___(void * jarg1, int jarg2) {
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->fingerId = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_fingerId_get___(void * jarg1) {
  int jresult ;
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  result = (int) ((arg1)->fingerId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_x_set___(void * jarg1, float jarg2) {
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float arg2 ;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_x_get___(void * jarg1) {
  float jresult ;
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float result;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_y_set___(void * jarg1, float jarg2) {
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float arg2 ;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_y_get___(void * jarg1) {
  float jresult ;
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float result;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_dx_set___(void * jarg1, float jarg2) {
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float arg2 ;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->dx = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_dx_get___(void * jarg1) {
  float jresult ;
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float result;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  result = (float) ((arg1)->dx);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_dy_set___(void * jarg1, float jarg2) {
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float arg2 ;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->dy = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_TouchFingerEvent_dy_get___(void * jarg1) {
  float jresult ;
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  float result;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  result = (float) ((arg1)->dy);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_TouchFingerEvent___() {
  void * jresult ;
  OgreBites::TouchFingerEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::TouchFingerEvent *)new OgreBites::TouchFingerEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_TouchFingerEvent___(void * jarg1) {
  OgreBites::TouchFingerEvent *arg1 = (OgreBites::TouchFingerEvent *) 0 ;
  
  arg1 = (OgreBites::TouchFingerEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TextInputEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::TextInputEvent *arg1 = (OgreBites::TextInputEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::TextInputEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_TextInputEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::TextInputEvent *arg1 = (OgreBites::TextInputEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::TextInputEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_TextInputEvent_chars_set___(void * jarg1, char * jarg2) {
  OgreBites::TextInputEvent *arg1 = (OgreBites::TextInputEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OgreBites::TextInputEvent *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->chars = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->chars, (const char *)arg2);
    } else {
      arg1->chars = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_orgfogre_TextInputEvent_chars_get___(void * jarg1) {
  char * jresult ;
  OgreBites::TextInputEvent *arg1 = (OgreBites::TextInputEvent *) 0 ;
  char *result = 0 ;
  
  arg1 = (OgreBites::TextInputEvent *)jarg1; 
  result = (char *) ((arg1)->chars);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_TextInputEvent___() {
  void * jresult ;
  OgreBites::TextInputEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::TextInputEvent *)new OgreBites::TextInputEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_TextInputEvent___(void * jarg1) {
  OgreBites::TextInputEvent *arg1 = (OgreBites::TextInputEvent *) 0 ;
  
  arg1 = (OgreBites::TextInputEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_AxisEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_AxisEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_AxisEvent_which_set___(void * jarg1, int jarg2) {
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->which = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_AxisEvent_which_get___(void * jarg1) {
  int jresult ;
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  result = (int) ((arg1)->which);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_AxisEvent_axis_set___(void * jarg1, unsigned char jarg2) {
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  unsigned char arg2 ;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->axis = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_orgfogre_AxisEvent_axis_get___(void * jarg1) {
  unsigned char jresult ;
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  unsigned char result;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  result = (unsigned char) ((arg1)->axis);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_AxisEvent_value_set___(void * jarg1, short jarg2) {
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  short arg2 ;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_orgfogre_AxisEvent_value_get___(void * jarg1) {
  short jresult ;
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  short result;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  result = (short) ((arg1)->value);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_AxisEvent___() {
  void * jresult ;
  OgreBites::AxisEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::AxisEvent *)new OgreBites::AxisEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_AxisEvent___(void * jarg1) {
  OgreBites::AxisEvent *arg1 = (OgreBites::AxisEvent *) 0 ;
  
  arg1 = (OgreBites::AxisEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ButtonEvent_type_set___(void * jarg1, int jarg2) {
  OgreBites::ButtonEvent *arg1 = (OgreBites::ButtonEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::ButtonEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_ButtonEvent_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::ButtonEvent *arg1 = (OgreBites::ButtonEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::ButtonEvent *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ButtonEvent_which_set___(void * jarg1, int jarg2) {
  OgreBites::ButtonEvent *arg1 = (OgreBites::ButtonEvent *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::ButtonEvent *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->which = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_ButtonEvent_which_get___(void * jarg1) {
  int jresult ;
  OgreBites::ButtonEvent *arg1 = (OgreBites::ButtonEvent *) 0 ;
  int result;
  
  arg1 = (OgreBites::ButtonEvent *)jarg1; 
  result = (int) ((arg1)->which);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ButtonEvent_button_set___(void * jarg1, unsigned char jarg2) {
  OgreBites::ButtonEvent *arg1 = (OgreBites::ButtonEvent *) 0 ;
  unsigned char arg2 ;
  
  arg1 = (OgreBites::ButtonEvent *)jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->button = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_orgfogre_ButtonEvent_button_get___(void * jarg1) {
  unsigned char jresult ;
  OgreBites::ButtonEvent *arg1 = (OgreBites::ButtonEvent *) 0 ;
  unsigned char result;
  
  arg1 = (OgreBites::ButtonEvent *)jarg1; 
  result = (unsigned char) ((arg1)->button);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_ButtonEvent___() {
  void * jresult ;
  OgreBites::ButtonEvent *result = 0 ;
  
  {
    try {
      result = (OgreBites::ButtonEvent *)new OgreBites::ButtonEvent();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_ButtonEvent___(void * jarg1) {
  OgreBites::ButtonEvent *arg1 = (OgreBites::ButtonEvent *) 0 ;
  
  arg1 = (OgreBites::ButtonEvent *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_type_set___(void * jarg1, int jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  int arg2 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_Event_type_get___(void * jarg1) {
  int jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  int result;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_key_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::KeyboardEvent *arg2 = (OgreBites::KeyboardEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2; 
  if (arg1) (arg1)->key = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_key_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::KeyboardEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::KeyboardEvent *)& ((arg1)->key);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_button_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = (OgreBites::MouseButtonEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2; 
  if (arg1) (arg1)->button = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_button_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::MouseButtonEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::MouseButtonEvent *)& ((arg1)->button);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_wheel_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::MouseWheelEvent *arg2 = (OgreBites::MouseWheelEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::MouseWheelEvent *)jarg2; 
  if (arg1) (arg1)->wheel = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_wheel_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::MouseWheelEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::MouseWheelEvent *)& ((arg1)->wheel);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_motion_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::MouseMotionEvent *arg2 = (OgreBites::MouseMotionEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::MouseMotionEvent *)jarg2; 
  if (arg1) (arg1)->motion = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_motion_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::MouseMotionEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::MouseMotionEvent *)& ((arg1)->motion);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_tfinger_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = (OgreBites::TouchFingerEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2; 
  if (arg1) (arg1)->tfinger = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_tfinger_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::TouchFingerEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::TouchFingerEvent *)& ((arg1)->tfinger);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_text_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::TextInputEvent *arg2 = (OgreBites::TextInputEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::TextInputEvent *)jarg2; 
  if (arg1) (arg1)->text = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_text_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::TextInputEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::TextInputEvent *)& ((arg1)->text);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_axis_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::AxisEvent *arg2 = (OgreBites::AxisEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::AxisEvent *)jarg2; 
  if (arg1) (arg1)->axis = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_axis_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::AxisEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::AxisEvent *)& ((arg1)->axis);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_Event_cbutton_set___(void * jarg1, void * jarg2) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::ButtonEvent *arg2 = (OgreBites::ButtonEvent *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  arg2 = (OgreBites::ButtonEvent *)jarg2; 
  if (arg1) (arg1)->cbutton = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_Event_cbutton_get___(void * jarg1) {
  void * jresult ;
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  OgreBites::ButtonEvent *result = 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  result = (OgreBites::ButtonEvent *)& ((arg1)->cbutton);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_Event___() {
  void * jresult ;
  OgreBites::Event *result = 0 ;
  
  {
    try {
      result = (OgreBites::Event *)new OgreBites::Event();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_Event___(void * jarg1) {
  OgreBites::Event *arg1 = (OgreBites::Event *) 0 ;
  
  arg1 = (OgreBites::Event *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_DELETE_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_DELETE;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_RETURN_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_RETURN;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_ESCAPE_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_ESCAPE;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_SPACE_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_SPACE;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F2;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F3_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F3;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F4_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F4;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F5_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F5;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F6_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F6;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F7_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F7;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F8_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F8;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F9_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F9;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F10_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F10;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F11_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F11;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_F12_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_F12;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_PRINTSCREEN_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_PRINTSCREEN;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_SCROLLLOCK_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_SCROLLLOCK;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_PAUSE_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_PAUSE;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_INSERT_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_INSERT;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_HOME_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_HOME;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_PAGEUP_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_PAGEUP;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_END_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_END;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_PAGEDOWN_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_PAGEDOWN;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_RIGHT_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_RIGHT;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_LEFT_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_LEFT;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_DOWN_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_DOWN;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_UP_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_UP;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_NUMLOCKCLEAR_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_NUMLOCKCLEAR;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_DIVIDE_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_DIVIDE;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_MULTIPLY_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_MULTIPLY;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_MINUS_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_MINUS;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_PLUS_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_PLUS;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_ENTER_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_ENTER;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_2;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_3_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_3;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_4_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_4;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_5_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_5;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_6_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_6;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_7_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_7;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_8_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_8;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_9_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_9;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_0_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_0;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_KP_PERIOD_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_KP_PERIOD;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_SDLK_LSHIFT_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::SDLK_LSHIFT;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_KMOD_ALT_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::KMOD_ALT;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_KMOD_CTRL_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::KMOD_CTRL;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_KMOD_GUI_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::KMOD_GUI;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_KMOD_SHIFT_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::KMOD_SHIFT;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_KMOD_NUM_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)OgreBites::KMOD_NUM;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_InputListener___(void * jarg1) {
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListener_frameRendered___(void * jarg1, void * jarg2) {
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->frameRendered((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListener_frameRenderedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->OgreBites::InputListener::frameRendered((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_keyPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyPressed((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_keyPressedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::keyPressed((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_keyReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyReleased((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_keyReleasedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::keyReleased((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_touchMoved___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->touchMoved((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_touchMovedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::touchMoved((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_touchPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->touchPressed((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_touchPressedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::touchPressed((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_touchReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->touchReleased((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_touchReleasedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::touchReleased((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mouseMoved___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseMotionEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseMotionEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseMotionEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseMoved((OgreBites::MouseMotionEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mouseMovedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseMotionEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseMotionEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseMotionEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::mouseMoved((OgreBites::MouseMotionEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mouseWheelRolled___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseWheelEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseWheelEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseWheelEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseWheelRolled((OgreBites::MouseWheelEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mouseWheelRolledSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseWheelEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseWheelEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseWheelEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::mouseWheelRolled((OgreBites::MouseWheelEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mousePressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mousePressed((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mousePressedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::mousePressed((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mouseReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseReleased((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_mouseReleasedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::mouseReleased((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_textInput___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TextInputEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TextInputEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TextInputEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->textInput((OgreBites::TextInputEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_textInputSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::TextInputEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::TextInputEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TextInputEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::textInput((OgreBites::TextInputEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_axisMoved___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::AxisEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::AxisEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::AxisEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->axisMoved((OgreBites::AxisEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_axisMovedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::AxisEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::AxisEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::AxisEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::axisMoved((OgreBites::AxisEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_buttonPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::ButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::ButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::ButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->buttonPressed((OgreBites::ButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_buttonPressedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::ButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::ButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::ButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::buttonPressed((OgreBites::ButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_buttonReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::ButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::ButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::ButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->buttonReleased((OgreBites::ButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListener_buttonReleasedSwigExplicitInputListener___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListener *arg1 = (OgreBites::InputListener *) 0 ;
  OgreBites::ButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListener *)jarg1; 
  arg2 = (OgreBites::ButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::ButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::InputListener::buttonReleased((OgreBites::ButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_InputListener___() {
  void * jresult ;
  OgreBites::InputListener *result = 0 ;
  
  {
    try {
      result = (OgreBites::InputListener *)new SwigDirector_InputListener();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_InputListener_director_connect___(void *objarg, SwigDirector_InputListener::SWIG_Callback0_t callback0, SwigDirector_InputListener::SWIG_Callback1_t callback1, SwigDirector_InputListener::SWIG_Callback2_t callback2, SwigDirector_InputListener::SWIG_Callback3_t callback3, SwigDirector_InputListener::SWIG_Callback4_t callback4, SwigDirector_InputListener::SWIG_Callback5_t callback5, SwigDirector_InputListener::SWIG_Callback6_t callback6, SwigDirector_InputListener::SWIG_Callback7_t callback7, SwigDirector_InputListener::SWIG_Callback8_t callback8, SwigDirector_InputListener::SWIG_Callback9_t callback9, SwigDirector_InputListener::SWIG_Callback10_t callback10, SwigDirector_InputListener::SWIG_Callback11_t callback11, SwigDirector_InputListener::SWIG_Callback12_t callback12, SwigDirector_InputListener::SWIG_Callback13_t callback13) {
  OgreBites::InputListener *obj = (OgreBites::InputListener *)objarg;
  SwigDirector_InputListener *director = static_cast<SwigDirector_InputListener *>(obj);
  director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_InputListenerChain__SWIG_0___() {
  void * jresult ;
  OgreBites::InputListenerChain *result = 0 ;
  
  {
    try {
      result = (OgreBites::InputListenerChain *)new OgreBites::InputListenerChain();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_InputListenerChain__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< OgreBites::InputListener * > arg1 ;
  std::vector< OgreBites::InputListener * > *argp1 ;
  OgreBites::InputListenerChain *result = 0 ;
  
  argp1 = (std::vector< OgreBites::InputListener * > *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< OgreBites::InputListener * >", 0);
    return 0;
  }
  arg1 = *argp1; 
  {
    try {
      result = (OgreBites::InputListenerChain *)new OgreBites::InputListenerChain(arg1);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_keyPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyPressed((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_keyReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyReleased((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_touchMoved___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->touchMoved((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_touchPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->touchPressed((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_touchReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::TouchFingerEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::TouchFingerEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TouchFingerEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->touchReleased((OgreBites::TouchFingerEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_mouseMoved___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::MouseMotionEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::MouseMotionEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseMotionEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseMoved((OgreBites::MouseMotionEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_mouseWheelRolled___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::MouseWheelEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::MouseWheelEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseWheelEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseWheelRolled((OgreBites::MouseWheelEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_mousePressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mousePressed((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_mouseReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseReleased((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_InputListenerChain_textInput___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  OgreBites::TextInputEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  arg2 = (OgreBites::TextInputEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TextInputEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->textInput((OgreBites::TextInputEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_InputListenerChain___(void * jarg1) {
  OgreBites::InputListenerChain *arg1 = (OgreBites::InputListenerChain *) 0 ;
  
  arg1 = (OgreBites::InputListenerChain *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_ImGuiInputListener___() {
  void * jresult ;
  OgreBites::ImGuiInputListener *result = 0 ;
  
  {
    try {
      result = (OgreBites::ImGuiInputListener *)new OgreBites::ImGuiInputListener();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_keyPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyPressed((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_keyReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyReleased((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_mouseMoved___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::MouseMotionEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::MouseMotionEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseMotionEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseMoved((OgreBites::MouseMotionEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_mouseWheelRolled___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::MouseWheelEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::MouseWheelEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseWheelEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseWheelRolled((OgreBites::MouseWheelEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_mousePressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mousePressed((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_mouseReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseReleased((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_textInput___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::TextInputEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::TextInputEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::TextInputEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->textInput((OgreBites::TextInputEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_buttonPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::ButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::ButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::ButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->buttonPressed((OgreBites::ButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_buttonReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  OgreBites::ButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  arg2 = (OgreBites::ButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::ButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->buttonReleased((OgreBites::ButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_ImGuiInputListener___(void * jarg1) {
  OgreBites::ImGuiInputListener *arg1 = (OgreBites::ImGuiInputListener *) 0 ;
  
  arg1 = (OgreBites::ImGuiInputListener *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_OGRE_BITES_HAVE_SDL_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_NativeWindowPair_render_set___(void * jarg1, void * jarg2) {
  OgreBites::NativeWindowPair *arg1 = (OgreBites::NativeWindowPair *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::NativeWindowPair *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  if (arg1) (arg1)->render = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_NativeWindowPair_render_get___(void * jarg1) {
  void * jresult ;
  OgreBites::NativeWindowPair *arg1 = (OgreBites::NativeWindowPair *) 0 ;
  Ogre::RenderWindow *result = 0 ;
  
  arg1 = (OgreBites::NativeWindowPair *)jarg1; 
  result = (Ogre::RenderWindow *) ((arg1)->render);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_NativeWindowPair_native_set___(void * jarg1, void * jarg2) {
  OgreBites::NativeWindowPair *arg1 = (OgreBites::NativeWindowPair *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  
  arg1 = (OgreBites::NativeWindowPair *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  if (arg1) (arg1)->native = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_NativeWindowPair_native_get___(void * jarg1) {
  void * jresult ;
  OgreBites::NativeWindowPair *arg1 = (OgreBites::NativeWindowPair *) 0 ;
  OgreBites::NativeWindowType *result = 0 ;
  
  arg1 = (OgreBites::NativeWindowPair *)jarg1; 
  result = (OgreBites::NativeWindowType *) ((arg1)->native);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_NativeWindowPair___() {
  void * jresult ;
  OgreBites::NativeWindowPair *result = 0 ;
  
  {
    try {
      result = (OgreBites::NativeWindowPair *)new OgreBites::NativeWindowPair();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_NativeWindowPair___(void * jarg1) {
  OgreBites::NativeWindowPair *arg1 = (OgreBites::NativeWindowPair *) 0 ;
  
  arg1 = (OgreBites::NativeWindowPair *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_ApplicationContextBase__SWIG_0___(char * jarg1) {
  void * jresult ;
  Ogre::String *arg1 = 0 ;
  OgreBites::ApplicationContextBase *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (OgreBites::ApplicationContextBase *)new SwigDirector_ApplicationContextBase((Ogre::String const &)*arg1);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_ApplicationContextBase__SWIG_1___() {
  void * jresult ;
  OgreBites::ApplicationContextBase *result = 0 ;
  
  {
    try {
      result = (OgreBites::ApplicationContextBase *)new SwigDirector_ApplicationContextBase();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_ApplicationContextBase___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_getRenderWindow___(void * jarg1) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *result = 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (Ogre::RenderWindow *)((OgreBites::ApplicationContextBase const *)arg1)->getRenderWindow();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_getRoot___(void * jarg1) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::Root *result = 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (Ogre::Root *)((OgreBites::ApplicationContextBase const *)arg1)->getRoot();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_getOverlaySystem___(void * jarg1) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::OverlaySystem *result = 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (Ogre::OverlaySystem *)((OgreBites::ApplicationContextBase const *)arg1)->getOverlaySystem();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_initApp___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->initApp();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_closeApp___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->closeApp();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_frameStarted___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->frameStarted((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_frameStartedSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::ApplicationContextBase::frameStarted((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_frameRenderingQueued___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->frameRenderingQueued((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_frameRenderingQueuedSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::ApplicationContextBase::frameRenderingQueued((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_frameEnded___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->frameEnded((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_frameEndedSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->OgreBites::ApplicationContextBase::frameEnded((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowMoved___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->windowMoved(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowMovedSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::windowMoved(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowResized___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->windowResized(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowResizedSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::windowResized(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowClosing___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      result = (bool)(arg1)->windowClosing(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowClosingSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      result = (bool)(arg1)->OgreBites::ApplicationContextBase::windowClosing(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowClosed___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->windowClosed(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowClosedSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::windowClosed(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowFocusChange___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->windowFocusChange(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_windowFocusChangeSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::RenderWindow *arg2 = (Ogre::RenderWindow *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (Ogre::RenderWindow *)jarg2; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::windowFocusChange(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase__fireInputEvent___(void * jarg1, void * jarg2, unsigned int jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::Event *arg2 = 0 ;
  uint32_t arg3 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::Event *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::Event const & type is null", 0);
    return ;
  } 
  arg3 = (uint32_t)jarg3; 
  {
    try {
      ((OgreBites::ApplicationContextBase const *)arg1)->_fireInputEvent((OgreBites::Event const &)*arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_initialiseRTShaderSystem___(void * jarg1) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (bool)(arg1)->initialiseRTShaderSystem();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setRTSSWriteShadersToDisk___(void * jarg1, unsigned int jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  bool arg2 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->setRTSSWriteShadersToDisk(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_destroyRTShaderSystem___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->destroyRTShaderSystem();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setup___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->setup();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setupSwigExplicitApplicationContextBase___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::setup();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createRoot___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->createRoot();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createRootSwigExplicitApplicationContextBase___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::createRoot();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_oneTimeConfig___(void * jarg1) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (bool)(arg1)->oneTimeConfig();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_oneTimeConfigSwigExplicitApplicationContextBase___(void * jarg1) {
  unsigned int jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  bool result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (bool)(arg1)->OgreBites::ApplicationContextBase::oneTimeConfig();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setWindowGrab__SWIG_0___(void * jarg1, void * jarg2, unsigned int jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  bool arg3 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      (arg1)->setWindowGrab(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setWindowGrabSwigExplicitApplicationContextBase__SWIG_0___(void * jarg1, void * jarg2, unsigned int jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  bool arg3 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::setWindowGrab(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setWindowGrab__SWIG_1___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  {
    try {
      (arg1)->setWindowGrab(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setWindowGrabSwigExplicitApplicationContextBase__SWIG_1___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::setWindowGrab(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_getDisplayDPI___(void * jarg1) {
  float jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  float result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (float)((OgreBites::ApplicationContextBase const *)arg1)->getDisplayDPI();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_getDisplayDPISwigExplicitApplicationContextBase___(void * jarg1) {
  float jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  float result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (float)((OgreBites::ApplicationContextBase const *)arg1)->OgreBites::ApplicationContextBase::getDisplayDPI();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setWindowGrab__SWIG_2___(void * jarg1, unsigned int jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  bool arg2 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->setWindowGrab(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_setWindowGrab__SWIG_3___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->setWindowGrab();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_locateResources___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->locateResources();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_locateResourcesSwigExplicitApplicationContextBase___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::locateResources();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_loadResources___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->loadResources();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_loadResourcesSwigExplicitApplicationContextBase___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::loadResources();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_reconfigure___(void * jarg1, char * jarg2, void * jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  Ogre::NameValuePairList *arg3 = 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (Ogre::NameValuePairList *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::NameValuePairList & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->reconfigure((Ogre::String const &)*arg2,*arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_reconfigureSwigExplicitApplicationContextBase___(void * jarg1, char * jarg2, void * jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  Ogre::NameValuePairList *arg3 = 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (Ogre::NameValuePairList *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::NameValuePairList & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::reconfigure((Ogre::String const &)*arg2,*arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_shutdown___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->shutdown();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_shutdownSwigExplicitApplicationContextBase___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::shutdown();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_pollEvents___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->pollEvents();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_pollEventsSwigExplicitApplicationContextBase___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::pollEvents();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createDummyScene___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->createDummyScene();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_destroyDummyScene___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      (arg1)->destroyDummyScene();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_enableShaderCache___(void * jarg1) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      ((OgreBites::ApplicationContextBase const *)arg1)->enableShaderCache();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_addInputListener__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->addInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_addInputListenerSwigExplicitApplicationContextBase__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::addInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_addInputListener__SWIG_1___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::InputListener *arg2 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::InputListener *)jarg2; 
  {
    try {
      (arg1)->addInputListener(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_removeInputListener__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->removeInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_removeInputListenerSwigExplicitApplicationContextBase__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextBase::removeInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_removeInputListener__SWIG_1___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::InputListener *arg2 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::InputListener *)jarg2; 
  {
    try {
      (arg1)->removeInputListener(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindow__SWIG_0___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4, void * jarg5) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  Ogre::NameValuePairList arg5 ;
  Ogre::NameValuePairList *argp5 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  argp5 = (Ogre::NameValuePairList *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Ogre::NameValuePairList", 0);
    return 0;
  }
  arg5 = *argp5; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2,arg3,arg4,arg5);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindowSwigExplicitApplicationContextBase__SWIG_0___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4, void * jarg5) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  Ogre::NameValuePairList arg5 ;
  Ogre::NameValuePairList *argp5 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  argp5 = (Ogre::NameValuePairList *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Ogre::NameValuePairList", 0);
    return 0;
  }
  arg5 = *argp5; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextBase::createWindow((Ogre::String const &)*arg2,arg3,arg4,arg5);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindow__SWIG_1___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2,arg3,arg4);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindowSwigExplicitApplicationContextBase__SWIG_1___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextBase::createWindow((Ogre::String const &)*arg2,arg3,arg4);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindow__SWIG_2___(void * jarg1, char * jarg2, unsigned int jarg3) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindowSwigExplicitApplicationContextBase__SWIG_2___(void * jarg1, char * jarg2, unsigned int jarg3) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextBase::createWindow((Ogre::String const &)*arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindow__SWIG_3___(void * jarg1, char * jarg2) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_createWindowSwigExplicitApplicationContextBase__SWIG_3___(void * jarg1, char * jarg2) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextBase::createWindow((Ogre::String const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_destroyWindow___(void * jarg1, char * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::String *arg2 = 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      (arg1)->destroyWindow((Ogre::String const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_getFSLayer___(void * jarg1) {
  void * jresult ;
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  Ogre::FileSystemLayer *result = 0 ;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  {
    try {
      result = (Ogre::FileSystemLayer *) &(arg1)->getFSLayer();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_getDefaultMediaDir___() {
  char * jresult ;
  Ogre::String result;
  
  {
    try {
      result = OgreBites::ApplicationContextBase::getDefaultMediaDir();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase__destroyWindow___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowPair *arg2 = 0 ;
  SwigDirector_ApplicationContextBase *darg = 0;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowPair *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::NativeWindowPair const & type is null", 0);
    return ;
  } 
  darg = dynamic_cast<SwigDirector_ApplicationContextBase *>(arg1);
  {
    try {
      (darg)->_destroyWindow((OgreBites::NativeWindowPair const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase__destroyWindowSwigExplicitApplicationContextBase___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextBase *arg1 = (OgreBites::ApplicationContextBase *) 0 ;
  OgreBites::NativeWindowPair *arg2 = 0 ;
  SwigDirector_ApplicationContextBase *darg = 0;
  
  arg1 = (OgreBites::ApplicationContextBase *)jarg1; 
  arg2 = (OgreBites::NativeWindowPair *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::NativeWindowPair const & type is null", 0);
    return ;
  } 
  darg = dynamic_cast<SwigDirector_ApplicationContextBase *>(arg1);
  {
    try {
      (darg)->_destroyWindowSwigPublic((OgreBites::NativeWindowPair const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_director_connect___(void *objarg, SwigDirector_ApplicationContextBase::SWIG_Callback0_t callback0, SwigDirector_ApplicationContextBase::SWIG_Callback1_t callback1, SwigDirector_ApplicationContextBase::SWIG_Callback2_t callback2, SwigDirector_ApplicationContextBase::SWIG_Callback3_t callback3, SwigDirector_ApplicationContextBase::SWIG_Callback4_t callback4, SwigDirector_ApplicationContextBase::SWIG_Callback5_t callback5, SwigDirector_ApplicationContextBase::SWIG_Callback6_t callback6, SwigDirector_ApplicationContextBase::SWIG_Callback7_t callback7, SwigDirector_ApplicationContextBase::SWIG_Callback8_t callback8, SwigDirector_ApplicationContextBase::SWIG_Callback9_t callback9, SwigDirector_ApplicationContextBase::SWIG_Callback10_t callback10, SwigDirector_ApplicationContextBase::SWIG_Callback11_t callback11, SwigDirector_ApplicationContextBase::SWIG_Callback12_t callback12, SwigDirector_ApplicationContextBase::SWIG_Callback13_t callback13, SwigDirector_ApplicationContextBase::SWIG_Callback14_t callback14, SwigDirector_ApplicationContextBase::SWIG_Callback15_t callback15, SwigDirector_ApplicationContextBase::SWIG_Callback16_t callback16, SwigDirector_ApplicationContextBase::SWIG_Callback17_t callback17, SwigDirector_ApplicationContextBase::SWIG_Callback18_t callback18, SwigDirector_ApplicationContextBase::SWIG_Callback19_t callback19, SwigDirector_ApplicationContextBase::SWIG_Callback20_t callback20, SwigDirector_ApplicationContextBase::SWIG_Callback21_t callback21, SwigDirector_ApplicationContextBase::SWIG_Callback22_t callback22, SwigDirector_ApplicationContextBase::SWIG_Callback23_t callback23, SwigDirector_ApplicationContextBase::SWIG_Callback24_t callback24, SwigDirector_ApplicationContextBase::SWIG_Callback25_t callback25) {
  OgreBites::ApplicationContextBase *obj = (OgreBites::ApplicationContextBase *)objarg;
  SwigDirector_ApplicationContextBase *director = static_cast<SwigDirector_ApplicationContextBase *>(obj);
  director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25);
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext__destroyWindow___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowPair *arg2 = 0 ;
  SwigDirector_ApplicationContext *darg = 0;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowPair *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::NativeWindowPair const & type is null", 0);
    return ;
  } 
  darg = dynamic_cast<SwigDirector_ApplicationContext *>(arg1);
  {
    try {
      (darg)->_destroyWindow((OgreBites::NativeWindowPair const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext__destroyWindowSwigExplicitApplicationContext___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowPair *arg2 = 0 ;
  SwigDirector_ApplicationContext *darg = 0;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowPair *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::NativeWindowPair const & type is null", 0);
    return ;
  } 
  darg = dynamic_cast<SwigDirector_ApplicationContext *>(arg1);
  {
    try {
      (darg)->_destroyWindowSwigPublic((OgreBites::NativeWindowPair const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_ApplicationContext__SWIG_0___(char * jarg1) {
  void * jresult ;
  Ogre::String *arg1 = 0 ;
  OgreBites::ApplicationContextSDL *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (OgreBites::ApplicationContextSDL *)new SwigDirector_ApplicationContext((Ogre::String const &)*arg1);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_ApplicationContext__SWIG_1___() {
  void * jresult ;
  OgreBites::ApplicationContextSDL *result = 0 ;
  
  {
    try {
      result = (OgreBites::ApplicationContextSDL *)new SwigDirector_ApplicationContext();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_setWindowGrab__SWIG_0___(void * jarg1, void * jarg2, unsigned int jarg3) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  bool arg3 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      (arg1)->setWindowGrab(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_setWindowGrabSwigExplicitApplicationContext__SWIG_0___(void * jarg1, void * jarg2, unsigned int jarg3) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  bool arg3 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextSDL::setWindowGrab(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_ApplicationContext_getDisplayDPI___(void * jarg1) {
  float jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  float result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      result = (float)((OgreBites::ApplicationContextSDL const *)arg1)->getDisplayDPI();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_ApplicationContext_getDisplayDPISwigExplicitApplicationContext___(void * jarg1) {
  float jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  float result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      result = (float)((OgreBites::ApplicationContextSDL const *)arg1)->OgreBites::ApplicationContextSDL::getDisplayDPI();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_shutdown___(void * jarg1) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      (arg1)->shutdown();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_shutdownSwigExplicitApplicationContext___(void * jarg1) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextSDL::shutdown();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_pollEvents___(void * jarg1) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      (arg1)->pollEvents();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_pollEventsSwigExplicitApplicationContext___(void * jarg1) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextSDL::pollEvents();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_addInputListener__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->addInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_addInputListenerSwigExplicitApplicationContext__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextSDL::addInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_removeInputListener__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->removeInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_removeInputListenerSwigExplicitApplicationContext__SWIG_0___(void * jarg1, void * jarg2, void * jarg3) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  OgreBites::InputListener *arg3 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  arg3 = (OgreBites::InputListener *)jarg3; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextSDL::removeInputListener(arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindow__SWIG_0___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4, void * jarg5) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  Ogre::NameValuePairList arg5 ;
  Ogre::NameValuePairList *argp5 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  argp5 = (Ogre::NameValuePairList *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Ogre::NameValuePairList", 0);
    return 0;
  }
  arg5 = *argp5; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2,arg3,arg4,arg5);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_0___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4, void * jarg5) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  Ogre::NameValuePairList arg5 ;
  Ogre::NameValuePairList *argp5 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  argp5 = (Ogre::NameValuePairList *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Ogre::NameValuePairList", 0);
    return 0;
  }
  arg5 = *argp5; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextSDL::createWindow((Ogre::String const &)*arg2,arg3,arg4,arg5);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindow__SWIG_1___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2,arg3,arg4);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_1___(void * jarg1, char * jarg2, unsigned int jarg3, unsigned int jarg4) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  arg4 = (uint32_t)jarg4; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextSDL::createWindow((Ogre::String const &)*arg2,arg3,arg4);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindow__SWIG_2___(void * jarg1, char * jarg2, unsigned int jarg3) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_2___(void * jarg1, char * jarg2, unsigned int jarg3) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  uint32_t arg3 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (uint32_t)jarg3; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextSDL::createWindow((Ogre::String const &)*arg2,arg3);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindow__SWIG_3___(void * jarg1, char * jarg2) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (arg1)->createWindow((Ogre::String const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_3___(void * jarg1, char * jarg2) {
  void * jresult ;
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  Ogre::String *arg2 = 0 ;
  OgreBites::NativeWindowPair result;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  Ogre::String arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (arg1)->OgreBites::ApplicationContextSDL::createWindow((Ogre::String const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new OgreBites::NativeWindowPair((const OgreBites::NativeWindowPair &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_setWindowGrab__SWIG_1_0___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  {
    try {
      (arg1)->setWindowGrab(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_setWindowGrabSwigExplicitApplicationContext__SWIG_1_0___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::NativeWindowType *arg2 = (OgreBites::NativeWindowType *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::NativeWindowType *)jarg2; 
  {
    try {
      (arg1)->OgreBites::ApplicationContextSDL::setWindowGrab(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_setWindowGrab__SWIG_1_1___(void * jarg1, unsigned int jarg2) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  bool arg2 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->setWindowGrab(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_setWindowGrab__SWIG_1_2___(void * jarg1) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      (arg1)->setWindowGrab();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_addInputListener__SWIG_1_0___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::InputListener *arg2 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::InputListener *)jarg2; 
  {
    try {
      (arg1)->addInputListener(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_removeInputListener__SWIG_1_0___(void * jarg1, void * jarg2) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  OgreBites::InputListener *arg2 = (OgreBites::InputListener *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  arg2 = (OgreBites::InputListener *)jarg2; 
  {
    try {
      (arg1)->removeInputListener(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_ApplicationContext___(void * jarg1) {
  OgreBites::ApplicationContextSDL *arg1 = (OgreBites::ApplicationContextSDL *) 0 ;
  
  arg1 = (OgreBites::ApplicationContextSDL *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_ApplicationContext_director_connect___(void *objarg, SwigDirector_ApplicationContext::SWIG_Callback0_t callback0, SwigDirector_ApplicationContext::SWIG_Callback1_t callback1, SwigDirector_ApplicationContext::SWIG_Callback2_t callback2, SwigDirector_ApplicationContext::SWIG_Callback3_t callback3, SwigDirector_ApplicationContext::SWIG_Callback4_t callback4, SwigDirector_ApplicationContext::SWIG_Callback5_t callback5, SwigDirector_ApplicationContext::SWIG_Callback6_t callback6, SwigDirector_ApplicationContext::SWIG_Callback7_t callback7, SwigDirector_ApplicationContext::SWIG_Callback8_t callback8, SwigDirector_ApplicationContext::SWIG_Callback9_t callback9, SwigDirector_ApplicationContext::SWIG_Callback10_t callback10, SwigDirector_ApplicationContext::SWIG_Callback11_t callback11, SwigDirector_ApplicationContext::SWIG_Callback12_t callback12, SwigDirector_ApplicationContext::SWIG_Callback13_t callback13, SwigDirector_ApplicationContext::SWIG_Callback14_t callback14, SwigDirector_ApplicationContext::SWIG_Callback15_t callback15, SwigDirector_ApplicationContext::SWIG_Callback16_t callback16, SwigDirector_ApplicationContext::SWIG_Callback17_t callback17, SwigDirector_ApplicationContext::SWIG_Callback18_t callback18, SwigDirector_ApplicationContext::SWIG_Callback19_t callback19, SwigDirector_ApplicationContext::SWIG_Callback20_t callback20, SwigDirector_ApplicationContext::SWIG_Callback21_t callback21, SwigDirector_ApplicationContext::SWIG_Callback22_t callback22, SwigDirector_ApplicationContext::SWIG_Callback23_t callback23, SwigDirector_ApplicationContext::SWIG_Callback24_t callback24, SwigDirector_ApplicationContext::SWIG_Callback25_t callback25) {
  OgreBites::ApplicationContextSDL *obj = (OgreBites::ApplicationContextSDL *)objarg;
  SwigDirector_ApplicationContext *director = static_cast<SwigDirector_ApplicationContext *>(obj);
  director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_new_CameraMan___(void * jarg1) {
  void * jresult ;
  Ogre::SceneNode *arg1 = (Ogre::SceneNode *) 0 ;
  OgreBites::CameraMan *result = 0 ;
  
  arg1 = (Ogre::SceneNode *)jarg1; 
  {
    try {
      result = (OgreBites::CameraMan *)new OgreBites::CameraMan(arg1);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_setCamera___(void * jarg1, void * jarg2) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::SceneNode *arg2 = (Ogre::SceneNode *) 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (Ogre::SceneNode *)jarg2; 
  {
    try {
      (arg1)->setCamera(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_CameraMan_getCamera___(void * jarg1) {
  void * jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::SceneNode *result = 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  {
    try {
      result = (Ogre::SceneNode *)(arg1)->getCamera();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_setTarget___(void * jarg1, void * jarg2) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::SceneNode *arg2 = (Ogre::SceneNode *) 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (Ogre::SceneNode *)jarg2; 
  {
    try {
      (arg1)->setTarget(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_orgfogre_CameraMan_getTarget___(void * jarg1) {
  void * jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::SceneNode *result = 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  {
    try {
      result = (Ogre::SceneNode *)(arg1)->getTarget();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_setYawPitchDist___(void * jarg1, void * jarg2, void * jarg3, float jarg4) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::Radian *arg2 = 0 ;
  Ogre::Radian *arg3 = 0 ;
  Ogre::Real arg4 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (Ogre::Radian *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::Radian const & type is null", 0);
    return ;
  } 
  arg3 = (Ogre::Radian *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::Radian const & type is null", 0);
    return ;
  } 
  arg4 = (Ogre::Real)jarg4; 
  {
    try {
      (arg1)->setYawPitchDist((Ogre::Radian const &)*arg2,(Ogre::Radian const &)*arg3,arg4);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_setTopSpeed___(void * jarg1, float jarg2) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::Real arg2 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (Ogre::Real)jarg2; 
  {
    try {
      (arg1)->setTopSpeed(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_orgfogre_CameraMan_getTopSpeed___(void * jarg1) {
  float jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::Real result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  {
    try {
      result = (Ogre::Real)(arg1)->getTopSpeed();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_setStyle___(void * jarg1, int jarg2) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::CameraStyle arg2 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (OgreBites::CameraStyle)jarg2; 
  {
    try {
      (arg1)->setStyle(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_orgfogre_CameraMan_getStyle___(void * jarg1) {
  int jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::CameraStyle result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  {
    try {
      result = (OgreBites::CameraStyle)(arg1)->getStyle();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_manualStop___(void * jarg1) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  {
    try {
      (arg1)->manualStop();
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_frameRendered___(void * jarg1, void * jarg2) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::FrameEvent *arg2 = 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (Ogre::FrameEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::FrameEvent const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->frameRendered((Ogre::FrameEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_CameraMan_keyPressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyPressed((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_CameraMan_keyReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::KeyboardEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (OgreBites::KeyboardEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::KeyboardEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->keyReleased((OgreBites::KeyboardEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_CameraMan_mouseMoved___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::MouseMotionEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (OgreBites::MouseMotionEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseMotionEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseMoved((OgreBites::MouseMotionEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_CameraMan_mouseWheelRolled___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::MouseWheelEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (OgreBites::MouseWheelEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseWheelEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseWheelRolled((OgreBites::MouseWheelEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_CameraMan_mousePressed___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mousePressed((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_orgfogre_CameraMan_mouseReleased___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  OgreBites::MouseButtonEvent *arg2 = 0 ;
  bool result;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (OgreBites::MouseButtonEvent *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OgreBites::MouseButtonEvent const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->mouseReleased((OgreBites::MouseButtonEvent const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_setFixedYaw___(void * jarg1, unsigned int jarg2) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  bool arg2 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->setFixedYaw(arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_CameraMan_setPivotOffset___(void * jarg1, void * jarg2) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  Ogre::Vector3 *arg2 = 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  arg2 = (Ogre::Vector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Ogre::Vector3 const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->setPivotOffset((Ogre::Vector3 const &)*arg2);
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_orgfogre_delete_CameraMan___(void * jarg1) {
  OgreBites::CameraMan *arg1 = (OgreBites::CameraMan *) 0 ;
  
  arg1 = (OgreBites::CameraMan *)jarg1; 
  {
    try {
      delete arg1;
    }
    
    
    
    
    
    
    
    
    catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT Ogre::MaterialManager::Listener * SWIGSTDCALL CSharp_orgfogre_SGTechniqueResolverListener_SWIGUpcast___(OgreBites::SGTechniqueResolverListener *jarg1) {
    return (Ogre::MaterialManager::Listener *)jarg1;
}

SWIGEXPORT OgreBites::InputListener * SWIGSTDCALL CSharp_orgfogre_InputListenerChain_SWIGUpcast___(OgreBites::InputListenerChain *jarg1) {
    return (OgreBites::InputListener *)jarg1;
}

SWIGEXPORT OgreBites::InputListener * SWIGSTDCALL CSharp_orgfogre_ImGuiInputListener_SWIGUpcast___(OgreBites::ImGuiInputListener *jarg1) {
    return (OgreBites::InputListener *)jarg1;
}

SWIGEXPORT Ogre::FrameListener * SWIGSTDCALL CSharp_orgfogre_ApplicationContextBase_SWIGUpcast___(OgreBites::ApplicationContextBase *jarg1) {
    return (Ogre::FrameListener *)jarg1;
}

SWIGEXPORT OgreBites::ApplicationContextBase * SWIGSTDCALL CSharp_orgfogre_ApplicationContext_SWIGUpcast___(OgreBites::ApplicationContextSDL *jarg1) {
    return (OgreBites::ApplicationContextBase *)jarg1;
}

SWIGEXPORT OgreBites::InputListener * SWIGSTDCALL CSharp_orgfogre_CameraMan_SWIGUpcast___(OgreBites::CameraMan *jarg1) {
    return (OgreBites::InputListener *)jarg1;
}

#ifdef __cplusplus
}
#endif

