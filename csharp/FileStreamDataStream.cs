//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class FileStreamDataStream : DataStream {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FileStreamDataStream(global::System.IntPtr cPtr, bool cMemoryOwn) : base(OgrePINVOKE.FileStreamDataStream_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FileStreamDataStream obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_FileStreamDataStream(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FileStreamDataStream(SWIGTYPE_p_std__ifstream s, bool freeOnClose) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_0(SWIGTYPE_p_std__ifstream.getCPtr(s), freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(SWIGTYPE_p_std__ifstream s) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_1(SWIGTYPE_p_std__ifstream.getCPtr(s)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(SWIGTYPE_p_std__fstream s, bool freeOnClose) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_2(SWIGTYPE_p_std__fstream.getCPtr(s), freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(SWIGTYPE_p_std__fstream s) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_3(SWIGTYPE_p_std__fstream.getCPtr(s)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__ifstream s, bool freeOnClose) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_4(name, SWIGTYPE_p_std__ifstream.getCPtr(s), freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__ifstream s) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_5(name, SWIGTYPE_p_std__ifstream.getCPtr(s)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__fstream s, bool freeOnClose) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_6(name, SWIGTYPE_p_std__fstream.getCPtr(s), freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__fstream s) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_7(name, SWIGTYPE_p_std__fstream.getCPtr(s)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__ifstream s, uint size, bool freeOnClose) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_8(name, SWIGTYPE_p_std__ifstream.getCPtr(s), size, freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__ifstream s, uint size) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_9(name, SWIGTYPE_p_std__ifstream.getCPtr(s), size), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__fstream s, uint size, bool freeOnClose) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_10(name, SWIGTYPE_p_std__fstream.getCPtr(s), size, freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream(string name, SWIGTYPE_p_std__fstream s, uint size) : this(OgrePINVOKE.new_FileStreamDataStream__SWIG_11(name, SWIGTYPE_p_std__fstream.getCPtr(s), size), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override uint read(global::System.IntPtr buf, uint count) {
    uint ret = OgrePINVOKE.FileStreamDataStream_read(swigCPtr, buf, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint write(global::System.IntPtr buf, uint count) {
    uint ret = OgrePINVOKE.FileStreamDataStream_write(swigCPtr, buf, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint readLine(string buf, uint maxCount, string delim) {
    uint ret = OgrePINVOKE.FileStreamDataStream_readLine__SWIG_0(swigCPtr, buf, maxCount, delim);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint readLine(string buf, uint maxCount) {
    uint ret = OgrePINVOKE.FileStreamDataStream_readLine__SWIG_1(swigCPtr, buf, maxCount);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void skip(int count) {
    OgrePINVOKE.FileStreamDataStream_skip(swigCPtr, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void seek(uint pos) {
    OgrePINVOKE.FileStreamDataStream_seek(swigCPtr, pos);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override uint tell() {
    uint ret = OgrePINVOKE.FileStreamDataStream_tell(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool eof() {
    bool ret = OgrePINVOKE.FileStreamDataStream_eof(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void close() {
    OgrePINVOKE.FileStreamDataStream_close(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

}

}
