//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class NumericAnimationTrack : AnimationTrack {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal NumericAnimationTrack(global::System.IntPtr cPtr, bool cMemoryOwn) : base(OgrePINVOKE.NumericAnimationTrack_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NumericAnimationTrack obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_NumericAnimationTrack(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public NumericAnimationTrack(Animation parent, ushort handle, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t target) : this(OgrePINVOKE.new_NumericAnimationTrack(Animation.getCPtr(parent), handle, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(target)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual NumericKeyFrame createNumericKeyFrame(float timePos) {
    global::System.IntPtr cPtr = OgrePINVOKE.NumericAnimationTrack_createNumericKeyFrame(swigCPtr, timePos);
    NumericKeyFrame ret = (cPtr == global::System.IntPtr.Zero) ? null : new NumericKeyFrame(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void getInterpolatedKeyFrame(TimeIndex timeIndex, KeyFrame kf) {
    OgrePINVOKE.NumericAnimationTrack_getInterpolatedKeyFrame(swigCPtr, TimeIndex.getCPtr(timeIndex), KeyFrame.getCPtr(kf));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void apply(TimeIndex timeIndex, float weight, float scale) {
    OgrePINVOKE.NumericAnimationTrack_apply__SWIG_0(swigCPtr, TimeIndex.getCPtr(timeIndex), weight, scale);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void apply(TimeIndex timeIndex, float weight) {
    OgrePINVOKE.NumericAnimationTrack_apply__SWIG_1(swigCPtr, TimeIndex.getCPtr(timeIndex), weight);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void apply(TimeIndex timeIndex) {
    OgrePINVOKE.NumericAnimationTrack_apply__SWIG_2(swigCPtr, TimeIndex.getCPtr(timeIndex));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyToAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t anim, TimeIndex timeIndex, float weight, float scale) {
    OgrePINVOKE.NumericAnimationTrack_applyToAnimable__SWIG_0(swigCPtr, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(anim), TimeIndex.getCPtr(timeIndex), weight, scale);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyToAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t anim, TimeIndex timeIndex, float weight) {
    OgrePINVOKE.NumericAnimationTrack_applyToAnimable__SWIG_1(swigCPtr, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(anim), TimeIndex.getCPtr(timeIndex), weight);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyToAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t anim, TimeIndex timeIndex) {
    OgrePINVOKE.NumericAnimationTrack_applyToAnimable__SWIG_2(swigCPtr, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(anim), TimeIndex.getCPtr(timeIndex));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t getAssociatedAnimable() {
    SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t ret = new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t(OgrePINVOKE.NumericAnimationTrack_getAssociatedAnimable(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setAssociatedAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t val) {
    OgrePINVOKE.NumericAnimationTrack_setAssociatedAnimable(swigCPtr, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(val));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public NumericKeyFrame getNumericKeyFrame(ushort index) {
    global::System.IntPtr cPtr = OgrePINVOKE.NumericAnimationTrack_getNumericKeyFrame(swigCPtr, index);
    NumericKeyFrame ret = (cPtr == global::System.IntPtr.Zero) ? null : new NumericKeyFrame(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NumericAnimationTrack _clone(Animation newParent) {
    global::System.IntPtr cPtr = OgrePINVOKE.NumericAnimationTrack__clone(swigCPtr, Animation.getCPtr(newParent));
    NumericAnimationTrack ret = (cPtr == global::System.IntPtr.Zero) ? null : new NumericAnimationTrack(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
