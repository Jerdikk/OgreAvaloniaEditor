//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class LodListener : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal LodListener(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(LodListener obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~LodListener() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_LodListener(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual bool prequeueMovableObjectLodChanged(MovableObjectLodChangedEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("prequeueMovableObjectLodChanged", swigMethodTypes0) ? OgrePINVOKE.LodListener_prequeueMovableObjectLodChangedSwigExplicitLodListener(swigCPtr, MovableObjectLodChangedEvent.getCPtr(evt)) : OgrePINVOKE.LodListener_prequeueMovableObjectLodChanged(swigCPtr, MovableObjectLodChangedEvent.getCPtr(evt)));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void postqueueMovableObjectLodChanged(MovableObjectLodChangedEvent evt) {
    if (SwigDerivedClassHasMethod("postqueueMovableObjectLodChanged", swigMethodTypes1)) OgrePINVOKE.LodListener_postqueueMovableObjectLodChangedSwigExplicitLodListener(swigCPtr, MovableObjectLodChangedEvent.getCPtr(evt)); else OgrePINVOKE.LodListener_postqueueMovableObjectLodChanged(swigCPtr, MovableObjectLodChangedEvent.getCPtr(evt));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool prequeueEntityMeshLodChanged(EntityMeshLodChangedEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("prequeueEntityMeshLodChanged", swigMethodTypes2) ? OgrePINVOKE.LodListener_prequeueEntityMeshLodChangedSwigExplicitLodListener(swigCPtr, EntityMeshLodChangedEvent.getCPtr(evt)) : OgrePINVOKE.LodListener_prequeueEntityMeshLodChanged(swigCPtr, EntityMeshLodChangedEvent.getCPtr(evt)));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void postqueueEntityMeshLodChanged(EntityMeshLodChangedEvent evt) {
    if (SwigDerivedClassHasMethod("postqueueEntityMeshLodChanged", swigMethodTypes3)) OgrePINVOKE.LodListener_postqueueEntityMeshLodChangedSwigExplicitLodListener(swigCPtr, EntityMeshLodChangedEvent.getCPtr(evt)); else OgrePINVOKE.LodListener_postqueueEntityMeshLodChanged(swigCPtr, EntityMeshLodChangedEvent.getCPtr(evt));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool prequeueEntityMaterialLodChanged(EntityMaterialLodChangedEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("prequeueEntityMaterialLodChanged", swigMethodTypes4) ? OgrePINVOKE.LodListener_prequeueEntityMaterialLodChangedSwigExplicitLodListener(swigCPtr, EntityMaterialLodChangedEvent.getCPtr(evt)) : OgrePINVOKE.LodListener_prequeueEntityMaterialLodChanged(swigCPtr, EntityMaterialLodChangedEvent.getCPtr(evt)));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void postqueueEntityMaterialLodChanged(EntityMaterialLodChangedEvent evt) {
    if (SwigDerivedClassHasMethod("postqueueEntityMaterialLodChanged", swigMethodTypes5)) OgrePINVOKE.LodListener_postqueueEntityMaterialLodChangedSwigExplicitLodListener(swigCPtr, EntityMaterialLodChangedEvent.getCPtr(evt)); else OgrePINVOKE.LodListener_postqueueEntityMaterialLodChanged(swigCPtr, EntityMaterialLodChangedEvent.getCPtr(evt));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public LodListener() : this(OgrePINVOKE.new_LodListener(), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("prequeueMovableObjectLodChanged", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateLodListener_0(SwigDirectorMethodprequeueMovableObjectLodChanged);
    if (SwigDerivedClassHasMethod("postqueueMovableObjectLodChanged", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateLodListener_1(SwigDirectorMethodpostqueueMovableObjectLodChanged);
    if (SwigDerivedClassHasMethod("prequeueEntityMeshLodChanged", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateLodListener_2(SwigDirectorMethodprequeueEntityMeshLodChanged);
    if (SwigDerivedClassHasMethod("postqueueEntityMeshLodChanged", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateLodListener_3(SwigDirectorMethodpostqueueEntityMeshLodChanged);
    if (SwigDerivedClassHasMethod("prequeueEntityMaterialLodChanged", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateLodListener_4(SwigDirectorMethodprequeueEntityMaterialLodChanged);
    if (SwigDerivedClassHasMethod("postqueueEntityMaterialLodChanged", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateLodListener_5(SwigDirectorMethodpostqueueEntityMaterialLodChanged);
    OgrePINVOKE.LodListener_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(LodListener));
    return hasDerivedMethod;
  }

  private bool SwigDirectorMethodprequeueMovableObjectLodChanged(global::System.IntPtr evt) {
    return prequeueMovableObjectLodChanged(new MovableObjectLodChangedEvent(evt, false));
  }

  private void SwigDirectorMethodpostqueueMovableObjectLodChanged(global::System.IntPtr evt) {
    postqueueMovableObjectLodChanged(new MovableObjectLodChangedEvent(evt, false));
  }

  private bool SwigDirectorMethodprequeueEntityMeshLodChanged(global::System.IntPtr evt) {
    return prequeueEntityMeshLodChanged(new EntityMeshLodChangedEvent(evt, false));
  }

  private void SwigDirectorMethodpostqueueEntityMeshLodChanged(global::System.IntPtr evt) {
    postqueueEntityMeshLodChanged(new EntityMeshLodChangedEvent(evt, false));
  }

  private bool SwigDirectorMethodprequeueEntityMaterialLodChanged(global::System.IntPtr evt) {
    return prequeueEntityMaterialLodChanged(new EntityMaterialLodChangedEvent(evt, false));
  }

  private void SwigDirectorMethodpostqueueEntityMaterialLodChanged(global::System.IntPtr evt) {
    postqueueEntityMaterialLodChanged(new EntityMaterialLodChangedEvent(evt, false));
  }

  public delegate bool SwigDelegateLodListener_0(global::System.IntPtr evt);
  public delegate void SwigDelegateLodListener_1(global::System.IntPtr evt);
  public delegate bool SwigDelegateLodListener_2(global::System.IntPtr evt);
  public delegate void SwigDelegateLodListener_3(global::System.IntPtr evt);
  public delegate bool SwigDelegateLodListener_4(global::System.IntPtr evt);
  public delegate void SwigDelegateLodListener_5(global::System.IntPtr evt);

  private SwigDelegateLodListener_0 swigDelegate0;
  private SwigDelegateLodListener_1 swigDelegate1;
  private SwigDelegateLodListener_2 swigDelegate2;
  private SwigDelegateLodListener_3 swigDelegate3;
  private SwigDelegateLodListener_4 swigDelegate4;
  private SwigDelegateLodListener_5 swigDelegate5;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(MovableObjectLodChangedEvent) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(MovableObjectLodChangedEvent) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(EntityMeshLodChangedEvent) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(EntityMeshLodChangedEvent) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(EntityMaterialLodChangedEvent) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(EntityMaterialLodChangedEvent) };
}

}
