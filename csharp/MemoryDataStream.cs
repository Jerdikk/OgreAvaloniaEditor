//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class MemoryDataStream : DataStream {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal MemoryDataStream(global::System.IntPtr cPtr, bool cMemoryOwn) : base(OgrePINVOKE.MemoryDataStream_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MemoryDataStream obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_MemoryDataStream(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public MemoryDataStream(global::System.IntPtr pMem, uint size, bool freeOnClose, bool readOnly) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_0(pMem, size, freeOnClose, readOnly), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(global::System.IntPtr pMem, uint size, bool freeOnClose) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_1(pMem, size, freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(global::System.IntPtr pMem, uint size) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_2(pMem, size), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, global::System.IntPtr pMem, uint size, bool freeOnClose, bool readOnly) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_3(name, pMem, size, freeOnClose, readOnly), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, global::System.IntPtr pMem, uint size, bool freeOnClose) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_4(name, pMem, size, freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, global::System.IntPtr pMem, uint size) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_5(name, pMem, size), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(DataStreamPtr sourceStream, bool freeOnClose, bool readOnly) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_6(DataStreamPtr.getCPtr(sourceStream), freeOnClose, readOnly), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(DataStreamPtr sourceStream, bool freeOnClose) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_7(DataStreamPtr.getCPtr(sourceStream), freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(DataStreamPtr sourceStream) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_8(DataStreamPtr.getCPtr(sourceStream)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, DataStreamPtr sourceStream, bool freeOnClose, bool readOnly) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_9(name, DataStreamPtr.getCPtr(sourceStream), freeOnClose, readOnly), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, DataStreamPtr sourceStream, bool freeOnClose) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_10(name, DataStreamPtr.getCPtr(sourceStream), freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, DataStreamPtr sourceStream) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_11(name, DataStreamPtr.getCPtr(sourceStream)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(uint size, bool freeOnClose, bool readOnly) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_12(size, freeOnClose, readOnly), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(uint size, bool freeOnClose) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_13(size, freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(uint size) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_14(size), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, uint size, bool freeOnClose, bool readOnly) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_15(name, size, freeOnClose, readOnly), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, uint size, bool freeOnClose) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_16(name, size, freeOnClose), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public MemoryDataStream(string name, uint size) : this(OgrePINVOKE.new_MemoryDataStream__SWIG_17(name, size), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_unsigned_char getPtr() {
    global::System.IntPtr cPtr = OgrePINVOKE.MemoryDataStream_getPtr(swigCPtr);
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned_char getCurrentPtr() {
    global::System.IntPtr cPtr = OgrePINVOKE.MemoryDataStream_getCurrentPtr(swigCPtr);
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint read(global::System.IntPtr buf, uint count) {
    uint ret = OgrePINVOKE.MemoryDataStream_read(swigCPtr, buf, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint write(global::System.IntPtr buf, uint count) {
    uint ret = OgrePINVOKE.MemoryDataStream_write(swigCPtr, buf, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint readLine(string buf, uint maxCount, string delim) {
    uint ret = OgrePINVOKE.MemoryDataStream_readLine__SWIG_0(swigCPtr, buf, maxCount, delim);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint readLine(string buf, uint maxCount) {
    uint ret = OgrePINVOKE.MemoryDataStream_readLine__SWIG_1(swigCPtr, buf, maxCount);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint skipLine(string delim) {
    uint ret = OgrePINVOKE.MemoryDataStream_skipLine__SWIG_0(swigCPtr, delim);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override uint skipLine() {
    uint ret = OgrePINVOKE.MemoryDataStream_skipLine__SWIG_1(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void skip(int count) {
    OgrePINVOKE.MemoryDataStream_skip(swigCPtr, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void seek(uint pos) {
    OgrePINVOKE.MemoryDataStream_seek(swigCPtr, pos);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override uint tell() {
    uint ret = OgrePINVOKE.MemoryDataStream_tell(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool eof() {
    bool ret = OgrePINVOKE.MemoryDataStream_eof(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void close() {
    OgrePINVOKE.MemoryDataStream_close(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setFreeOnClose(bool free) {
    OgrePINVOKE.MemoryDataStream_setFreeOnClose(swigCPtr, free);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

}

}
