//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class FileStreamDataStreamPtr : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FileStreamDataStreamPtr(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FileStreamDataStreamPtr obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FileStreamDataStreamPtr() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_FileStreamDataStreamPtr(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public FileStreamDataStreamPtr(SWIGTYPE_p_std__nullptr_t arg0) : this(OgrePINVOKE.new_FileStreamDataStreamPtr__SWIG_0(SWIGTYPE_p_std__nullptr_t.getCPtr(arg0)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStreamPtr() : this(OgrePINVOKE.new_FileStreamDataStreamPtr__SWIG_1(), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStreamPtr(FileStreamDataStreamPtr r) : this(OgrePINVOKE.new_FileStreamDataStreamPtr__SWIG_2(FileStreamDataStreamPtr.getCPtr(r)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public FileStreamDataStream __deref__() {
    global::System.IntPtr cPtr = OgrePINVOKE.FileStreamDataStreamPtr___deref__(swigCPtr);
    FileStreamDataStream ret = (cPtr == global::System.IntPtr.Zero) ? null : new FileStreamDataStream(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint read(global::System.IntPtr buf, uint count) {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_read(swigCPtr, buf, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint write(global::System.IntPtr buf, uint count) {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_write(swigCPtr, buf, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint readLine(string buf, uint maxCount, string delim) {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_readLine__SWIG_0(swigCPtr, buf, maxCount, delim);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint readLine(string buf, uint maxCount) {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_readLine__SWIG_1(swigCPtr, buf, maxCount);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void skip(int count) {
    OgrePINVOKE.FileStreamDataStreamPtr_skip(swigCPtr, count);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public void seek(uint pos) {
    OgrePINVOKE.FileStreamDataStreamPtr_seek(swigCPtr, pos);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public uint tell() {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_tell(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool eof() {
    bool ret = OgrePINVOKE.FileStreamDataStreamPtr_eof(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void close() {
    OgrePINVOKE.FileStreamDataStreamPtr_close(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
    string ret = OgrePINVOKE.FileStreamDataStreamPtr_getName(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ushort getAccessMode() {
    ushort ret = OgrePINVOKE.FileStreamDataStreamPtr_getAccessMode(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isReadable() {
    bool ret = OgrePINVOKE.FileStreamDataStreamPtr_isReadable(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isWriteable() {
    bool ret = OgrePINVOKE.FileStreamDataStreamPtr_isWriteable(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getLine(bool trimAfter) {
    string ret = OgrePINVOKE.FileStreamDataStreamPtr_getLine__SWIG_0(swigCPtr, trimAfter);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getLine() {
    string ret = OgrePINVOKE.FileStreamDataStreamPtr_getLine__SWIG_1(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getAsString() {
    string ret = OgrePINVOKE.FileStreamDataStreamPtr_getAsString(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint skipLine(string delim) {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_skipLine__SWIG_0(swigCPtr, delim);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint skipLine() {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_skipLine__SWIG_1(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint size() {
    uint ret = OgrePINVOKE.FileStreamDataStreamPtr_size(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
